<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MXE23</title>
  <icon>https://www.gravatar.com/avatar/2c1948f89e2920aac9b929155ec04e9f</icon>
  
  <link href="http://mxe23.cn/atom.xml" rel="self"/>
  
  <link href="http://mxe23.cn/"/>
  <updated>2024-10-31T11:19:32.999Z</updated>
  <id>http://mxe23.cn/</id>
  
  <author>
    <name>MXE23</name>
    <email>3103551673@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>react modal组件封装</title>
    <link href="http://mxe23.cn/2024/10/31/React/react%E5%BC%B9%E7%AA%97%E7%BB%84%E4%BB%B6/"/>
    <id>http://mxe23.cn/2024/10/31/React/react%E5%BC%B9%E7%AA%97%E7%BB%84%E4%BB%B6/</id>
    <published>2024-10-30T16:00:00.000Z</published>
    <updated>2024-10-31T11:19:32.999Z</updated>
    
    <content type="html"><![CDATA[<h3 id="确定组件参数"><a href="#确定组件参数" class="headerlink" title="确定组件参数"></a>确定组件参数</h3><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">ModalProps</span> = &#123;</span><br><span class="line">    <span class="comment">// 动画类型</span></span><br><span class="line">    effect?: <span class="built_in">number</span>;</span><br><span class="line">    <span class="comment">// 是否显示模态框</span></span><br><span class="line">    <span class="attr">visible</span>: <span class="built_in">boolean</span>;</span><br><span class="line">    <span class="comment">// 控制模态框显示</span></span><br><span class="line">    <span class="attr">setVisible</span>: <span class="title class_">Function</span>;</span><br><span class="line">    <span class="comment">// 宽高和位置</span></span><br><span class="line">    width?: <span class="built_in">number</span>;</span><br><span class="line">    height?: <span class="built_in">number</span>;</span><br><span class="line">    left?: <span class="built_in">number</span>;</span><br><span class="line">    top?: <span class="built_in">number</span>;</span><br><span class="line">    <span class="comment">// 覆盖样式</span></span><br><span class="line">    style?: <span class="title class_">CSSProperties</span>;</span><br><span class="line">    <span class="comment">// 模态框内容</span></span><br><span class="line">    children?: <span class="title class_">React</span>.<span class="property">ReactNode</span>;</span><br><span class="line">    <span class="comment">// 是否显示遮罩</span></span><br><span class="line">    mask?: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组件代码"><a href="#组件代码" class="headerlink" title="组件代码"></a>组件代码</h3><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> (<span class="params">props: ModalProps</span>) &#123;</span><br><span class="line">    <span class="comment">// 设定初始值</span></span><br><span class="line">    <span class="keyword">let</span> &#123; width = <span class="number">900</span>, height = <span class="number">600</span>, left, top, style = &#123;&#125;, children, mask = <span class="literal">true</span>, visible, setVisible, effect = <span class="number">1</span> &#125; = props</span><br><span class="line">    <span class="comment">// 是否显示遮罩层</span></span><br><span class="line">    <span class="keyword">const</span> showMask = <span class="title function_">useMemo</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mask) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> visible</span><br><span class="line">    &#125;, [visible, mask])</span><br><span class="line"></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (visible) &#123;</span><br><span class="line">            modalRef.<span class="property">current</span>!.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;md-show&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            modalRef.<span class="property">current</span>!.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;md-show&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [visible])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> modalRef = useRef&lt;<span class="title class_">HTMLDivElement</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;modalRef&#125;</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">modal</span> <span class="attr">md-effect-</span>$&#123;<span class="attr">effect</span>&#125;`&#125; <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width</span>, <span class="attr">height</span>, <span class="attr">left:</span> <span class="attr">left</span> || `<span class="attr">calc</span>(<span class="attr">50</span>% <span class="attr">-</span> $&#123;<span class="attr">width</span> / <span class="attr">2</span>&#125;<span class="attr">px</span>)`, <span class="attr">top:</span> <span class="attr">top</span> || `<span class="attr">100px</span>`, <span class="attr">...style</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;showMask ? <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mask&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            setVisible(false)</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;&gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> : &#x27;&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组件样式"><a href="#组件样式" class="headerlink" title="组件样式"></a>组件样式</h3><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CSSProperties</span>, useEffect, useMemo, useRef &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Wrapper</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    .mask &#123;</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        background-color: rgb(0,0,0,.5);</span></span><br><span class="line"><span class="string">        width: 100vw;</span></span><br><span class="line"><span class="string">        height: 100vh;</span></span><br><span class="line"><span class="string">        left: 0;</span></span><br><span class="line"><span class="string">        top: 0;</span></span><br><span class="line"><span class="string">        z-index: 998;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .modal &#123;</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        background-color: #FFF;</span></span><br><span class="line"><span class="string">        z-index: 999;</span></span><br><span class="line"><span class="string">        visibility: hidden;</span></span><br><span class="line"><span class="string">        -webkit-backface-visibility: hidden;</span></span><br><span class="line"><span class="string">        -moz-backface-visibility: hidden;</span></span><br><span class="line"><span class="string">        backface-visibility: hidden;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    .md-show &#123;</span></span><br><span class="line"><span class="string">        visibility: visible;</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .md-effect-1 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: scale(0.7);</span></span><br><span class="line"><span class="string">        -moz-transform: scale(0.7);</span></span><br><span class="line"><span class="string">        -ms-transform: scale(0.7);</span></span><br><span class="line"><span class="string">        transform: scale(0.7);</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.3s;</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.3s;</span></span><br><span class="line"><span class="string">        transition: all 0.3s;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-1 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: scale(1);</span></span><br><span class="line"><span class="string">        -moz-transform: scale(1);</span></span><br><span class="line"><span class="string">        -ms-transform: scale(1);</span></span><br><span class="line"><span class="string">        transform: scale(1);</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 2: Slide from the right */</span></span><br><span class="line"><span class="string">    .md-effect-2 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateX(20%);</span></span><br><span class="line"><span class="string">        -moz-transform: translateX(20%);</span></span><br><span class="line"><span class="string">        -ms-transform: translateX(20%);</span></span><br><span class="line"><span class="string">        transform: translateX(20%);</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);</span></span><br><span class="line"><span class="string">        transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-2 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateX(0);</span></span><br><span class="line"><span class="string">        -moz-transform: translateX(0);</span></span><br><span class="line"><span class="string">        -ms-transform: translateX(0);</span></span><br><span class="line"><span class="string">        transform: translateX(0);</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 3: Slide from the bottom */</span></span><br><span class="line"><span class="string">    .md-effect-3 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateY(20%);</span></span><br><span class="line"><span class="string">        -moz-transform: translateY(20%);</span></span><br><span class="line"><span class="string">        -ms-transform: translateY(20%);</span></span><br><span class="line"><span class="string">        transform: translateY(20%);</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.3s;</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.3s;</span></span><br><span class="line"><span class="string">        transition: all 0.3s;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-3 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateY(0);</span></span><br><span class="line"><span class="string">        -moz-transform: translateY(0);</span></span><br><span class="line"><span class="string">        -ms-transform: translateY(0);</span></span><br><span class="line"><span class="string">        transform: translateY(0);</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 4: Newspaper */</span></span><br><span class="line"><span class="string">    .md-effect-4 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: scale(0) rotate(720deg);</span></span><br><span class="line"><span class="string">        -moz-transform: scale(0) rotate(720deg);</span></span><br><span class="line"><span class="string">        -ms-transform: scale(0) rotate(720deg);</span></span><br><span class="line"><span class="string">        transform: scale(0) rotate(720deg);</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-4 ~ .md-overlay,</span></span><br><span class="line"><span class="string">    .md-effect-4 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.5s;</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.5s;</span></span><br><span class="line"><span class="string">        transition: all 0.5s;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-4 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: scale(1) rotate(0deg);</span></span><br><span class="line"><span class="string">        -moz-transform: scale(1) rotate(0deg);</span></span><br><span class="line"><span class="string">        -ms-transform: scale(1) rotate(0deg);</span></span><br><span class="line"><span class="string">        transform: scale(1) rotate(0deg);</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 5: fall */</span></span><br><span class="line"><span class="string">    .md-effect-5.md-modal &#123;</span></span><br><span class="line"><span class="string">        -webkit-perspective: 1300px;</span></span><br><span class="line"><span class="string">        -moz-perspective: 1300px;</span></span><br><span class="line"><span class="string">        perspective: 1300px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-effect-5 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        -moz-transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateZ(600px) rotateX(20deg); </span></span><br><span class="line"><span class="string">        -moz-transform: translateZ(600px) rotateX(20deg); </span></span><br><span class="line"><span class="string">        -ms-transform: translateZ(600px) rotateX(20deg); </span></span><br><span class="line"><span class="string">        transform: translateZ(600px) rotateX(20deg); </span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-5 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateZ(0px) rotateX(0deg);</span></span><br><span class="line"><span class="string">        -moz-transform: translateZ(0px) rotateX(0deg);</span></span><br><span class="line"><span class="string">        -ms-transform: translateZ(0px) rotateX(0deg);</span></span><br><span class="line"><span class="string">        transform: translateZ(0px) rotateX(0deg); </span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 6: side fall */</span></span><br><span class="line"><span class="string">    .md-effect-6.md-modal &#123;</span></span><br><span class="line"><span class="string">        -webkit-perspective: 1300px;</span></span><br><span class="line"><span class="string">        -moz-perspective: 1300px;</span></span><br><span class="line"><span class="string">        perspective: 1300px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-effect-6 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        -moz-transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        transform-style: preserve-3d;</span></span><br><span class="line"><span class="string">        -webkit-transform: translate(30%) translateZ(600px) rotate(10deg); </span></span><br><span class="line"><span class="string">        -moz-transform: translate(30%) translateZ(600px) rotate(10deg);</span></span><br><span class="line"><span class="string">        -ms-transform: translate(30%) translateZ(600px) rotate(10deg);</span></span><br><span class="line"><span class="string">        transform: translate(30%) translateZ(600px) rotate(10deg); </span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-6 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        -moz-transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        transition: all 0.3s ease-in;</span></span><br><span class="line"><span class="string">        -webkit-transform: translate(0%) translateZ(0) rotate(0deg);</span></span><br><span class="line"><span class="string">        -moz-transform: translate(0%) translateZ(0) rotate(0deg);</span></span><br><span class="line"><span class="string">        -ms-transform: translate(0%) translateZ(0) rotate(0deg);</span></span><br><span class="line"><span class="string">        transform: translate(0%) translateZ(0) rotate(0deg);</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Effect 7:  slide and stick to top */</span></span><br><span class="line"><span class="string">    .md-effect-7&#123;</span></span><br><span class="line"><span class="string">        top: 0;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateX(-50%);</span></span><br><span class="line"><span class="string">        -moz-transform: translateX(-50%);</span></span><br><span class="line"><span class="string">        -ms-transform: translateX(-50%);</span></span><br><span class="line"><span class="string">        transform: translateX(-50%);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-effect-7 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateY(-200%);</span></span><br><span class="line"><span class="string">        -moz-transform: translateY(-200%);</span></span><br><span class="line"><span class="string">        -ms-transform: translateY(-200%);</span></span><br><span class="line"><span class="string">        transform: translateY(-200%);</span></span><br><span class="line"><span class="string">        -webkit-transition: all .3s;</span></span><br><span class="line"><span class="string">        -moz-transition: all .3s;</span></span><br><span class="line"><span class="string">        transition: all .3s;</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .md-show.md-effect-7 &#123;</span></span><br><span class="line"><span class="string">        -webkit-transform: translateY(0%);</span></span><br><span class="line"><span class="string">        -moz-transform: translateY(0%);</span></span><br><span class="line"><span class="string">        -ms-transform: translateY(0%);</span></span><br><span class="line"><span class="string">        transform: translateY(0%);</span></span><br><span class="line"><span class="string">        border-radius: 0 0 3px 3px;</span></span><br><span class="line"><span class="string">        opacity: 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Modal</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Modal01&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [<span class="keyword">type</span>, setType] = <span class="title function_">useState</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">100vw</span>&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">100vh</span>&#x27;, <span class="attr">background:</span> &#x27;#<span class="attr">1F1F1F</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;grid&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;</span></span><br><span class="line"><span class="language-xml">            [1, 2, 3, 4, 5, 6, 7].map(v =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">              return <span class="tag">&lt;<span class="name">button</span> <span class="attr">style</span>=<span class="string">&#123;&#123;marginRight:</span>&#x27;<span class="attr">15px</span>&#x27;&#125;&#125; <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                setType(v)</span></span><br><span class="line"><span class="language-xml">                setVisible(!visible)</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;&gt;effect&#123;v&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#125;)</span></span><br><span class="line"><span class="language-xml">          &#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Modal</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">borderRadius:</span> &#x27;<span class="attr">10px</span>&#x27; &#125;&#125; <span class="attr">effect</span>=<span class="string">&#123;type&#125;</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span> <span class="attr">setVisible</span>=<span class="string">&#123;setVisible&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Modal</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;确定组件参数&quot;&gt;&lt;a href=&quot;#确定组件参数&quot; class=&quot;headerlink&quot; title=&quot;确定组件参数&quot;&gt;&lt;/a&gt;确定组件参数&lt;/h3&gt;&lt;figure class=&quot;highlight tsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="React" scheme="http://mxe23.cn/categories/React/"/>
    
    
    <category term="javascript" scheme="http://mxe23.cn/tags/javascript/"/>
    
    <category term="react" scheme="http://mxe23.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>宵宫-彩虹节拍</title>
    <link href="http://mxe23.cn/2024/09/02/MikuMikuDance/%E5%BD%A9%E8%99%B9%E8%8A%82%E6%8B%8D/"/>
    <id>http://mxe23.cn/2024/09/02/MikuMikuDance/%E5%BD%A9%E8%99%B9%E8%8A%82%E6%8B%8D/</id>
    <published>2024-09-01T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.617Z</updated>
    
    <content type="html"><![CDATA[<p><video style="width:100%" controls src="http://47.99.73.39:9000/source/MMD/%E5%AE%B5%E5%AE%AB%E5%BD%A9%E8%99%B9%E8%8A%82%E6%8B%8D.mp4"></video></p><p>尝试了一下blender的仿原神渲染预设</p><h3 id="借物表"><a href="#借物表" class="headerlink" title="借物表"></a>借物表</h3><p>动作：兰若_Ruo<br>镜头：秋燚QY<br>渲染：小二今天吃啥啊</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;video style=&quot;width:100%&quot; controls src=&quot;http://47.99.73.39:9000/source/MMD/%E5%AE%B5%E5%AE%AB%E5%BD%A9%E8%99%B9%E8%8A%82%E6%8B%8D.mp4&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="MMD" scheme="http://mxe23.cn/categories/MMD/"/>
    
    
    <category term="MikuMikuDance" scheme="http://mxe23.cn/tags/MikuMikuDance/"/>
    
    <category term="Blender" scheme="http://mxe23.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>NestJs 调用百度千帆大模型</title>
    <link href="http://mxe23.cn/2024/08/10/NestJs/NestJs%E8%B0%83%E7%94%A8%E6%96%87%E5%BF%83Api/"/>
    <id>http://mxe23.cn/2024/08/10/NestJs/NestJs%E8%B0%83%E7%94%A8%E6%96%87%E5%BF%83Api/</id>
    <published>2024-08-09T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.617Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>最近想实现个人的应用调用gpt，并返回内容</p><p>一开始想尝试本地部署大模型，再使用对应API，在查看了各个模型需求的配置后</p><p>感觉自己的电脑有些吃力，就选择调用现有大模型的API来使用</p><p>因为个人的水平选择了百度千帆大模型平台（该平台提供了Nodejs版本的SDK）</p><p><a href="https://cloud.baidu.com/doc/WENXINWORKSHOP/s/7lte7zhab">Node.js SDK文档</a></p><p><a href="https://www.npmjs.com/package/@baiducloud/qianfan">@baiducloud/qianfan - npm (npmjs.com)</a></p><p>要实现原版gpt的打字机效果等，最好还是使用流式输出以及websocket</p><p>chat.gateway.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ChatCompletion</span>, setEnvVariable &#125; <span class="keyword">from</span> <span class="string">&quot;@baiducloud/qianfan&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ConnectedSocket</span>, <span class="title class_">MessageBody</span>, <span class="title class_">SubscribeMessage</span>, <span class="title class_">WebSocketGateway</span>, <span class="title class_">WebSocketServer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/websockets&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">WebSocket</span> <span class="keyword">from</span> <span class="string">&#x27;ws&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用安全认证AK/SK鉴权，通过环境变量初始化；</span></span><br><span class="line"><span class="title function_">setEnvVariable</span>(<span class="string">&#x27;QIANFAN_ACCESS_KEY&#x27;</span>, <span class="string">&#x27;自己的AK&#x27;</span>);</span><br><span class="line"><span class="title function_">setEnvVariable</span>(<span class="string">&#x27;QIANFAN_SECRET_KEY&#x27;</span>, <span class="string">&#x27;自己的SK&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// websocket端口</span></span><br><span class="line"><span class="meta">@WebSocketGateway</span>(<span class="number">4000</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ChatGateWay</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> client = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">client</span> = <span class="keyword">new</span> <span class="title class_">ChatCompletion</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@SubscribeMessage</span>(<span class="string">&#x27;chat&#x27;</span>)</span><br><span class="line">    <span class="comment">// 订阅消息</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">chat</span>(<span class="params"><span class="meta">@MessageBody</span>() data, <span class="meta">@ConnectedSocket</span>() client: WebSocket</span>) &#123;</span><br><span class="line">        <span class="comment">// 输入到千帆大模型</span></span><br><span class="line">        <span class="keyword">const</span> stream = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">client</span>.<span class="title function_">chat</span>(&#123;</span><br><span class="line">            <span class="attr">messages</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">                    <span class="attr">content</span>: data,</span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">stream</span>: <span class="literal">true</span></span><br><span class="line">        &#125;, <span class="string">&#x27;ERNIE-3.5-8K&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">        client.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">event</span>: <span class="string">&#x27;start&#x27;</span>, <span class="attr">data</span>: <span class="number">1</span> &#125;));</span><br><span class="line">        <span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">const</span> chunk <span class="keyword">of</span> stream <span class="keyword">as</span> <span class="title class_">AsyncIterableIterator</span>&lt;<span class="built_in">any</span>&gt;) &#123;</span><br><span class="line">            <span class="comment">// 流式输出并发布消息</span></span><br><span class="line">            client.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">event</span>: <span class="string">&#x27;msg&#x27;</span>, <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(chunk) &#125;));</span><br><span class="line">        &#125;</span><br><span class="line">        client.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">event</span>: <span class="string">&#x27;end&#x27;</span>, <span class="attr">data</span>: <span class="number">1</span> &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ws.adapter.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">WebSocket</span> <span class="keyword">from</span> <span class="string">&#x27;ws&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">WebSocketAdapter</span>, <span class="title class_">INestApplicationContext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MessageMappingProperties</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/websockets&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Observable</span>, fromEvent, <span class="variable constant_">EMPTY</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;rxjs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; mergeMap, filter &#125; <span class="keyword">from</span> <span class="string">&#x27;rxjs/operators&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">WsAdapter</span> <span class="keyword">implements</span> <span class="title class_">WebSocketAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> app: INestApplicationContext</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">create</span>(<span class="attr">port</span>: <span class="built_in">number</span>, <span class="attr">options</span>: <span class="built_in">any</span> = &#123;&#125;): <span class="built_in">any</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ws create&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WebSocket</span>.<span class="title class_">Server</span>(&#123; port, ...options &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">bindClientConnect</span>(<span class="params">server, callback: <span class="built_in">Function</span></span>) &#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;ws bindClientConnect, server:\n&#x27;, server);</span></span><br><span class="line">        server.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, callback);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">bindMessageHandlers</span>(<span class="params"></span></span><br><span class="line"><span class="params">        client: WebSocket,</span></span><br><span class="line"><span class="params">        handlers: MessageMappingProperties[],</span></span><br><span class="line"><span class="params">        process: (data: <span class="built_in">any</span>) =&gt; Observable&lt;<span class="built_in">any</span>&gt;,</span></span><br><span class="line"><span class="params">    </span>) &#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;[waAdapter]有新的连接进来&#x27;)</span></span><br><span class="line">        <span class="title function_">fromEvent</span>(client, <span class="string">&#x27;message&#x27;</span>)</span><br><span class="line">            .<span class="title function_">pipe</span>(</span><br><span class="line">                <span class="title function_">mergeMap</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">bindMessageHandler</span>(client, data, handlers, process)),</span><br><span class="line">                <span class="title function_">filter</span>(<span class="function"><span class="params">result</span> =&gt;</span> result),</span><br><span class="line">            )</span><br><span class="line">            .<span class="title function_">subscribe</span>(<span class="function"><span class="params">response</span> =&gt;</span> client.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(response)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">bindMessageHandler</span>(</span><br><span class="line">        <span class="attr">client</span>: <span class="title class_">WebSocket</span>,</span><br><span class="line">        buffer,</span><br><span class="line">        <span class="attr">handlers</span>: <span class="title class_">MessageMappingProperties</span>[],</span><br><span class="line">        <span class="attr">process</span>: <span class="function">(<span class="params">data: <span class="built_in">any</span></span>) =&gt;</span> <span class="title class_">Observable</span>&lt;<span class="built_in">any</span>&gt;,</span><br><span class="line">    ): <span class="title class_">Observable</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(buffer.<span class="property">data</span>)</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            message = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(buffer.<span class="property">data</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ws解析json出错&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable constant_">EMPTY</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> messageHandler = handlers.<span class="title function_">find</span>(</span><br><span class="line">            <span class="function"><span class="params">handler</span> =&gt;</span> handler.<span class="property">message</span> === message.<span class="property">event</span>,</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (!messageHandler) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable constant_">EMPTY</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">process</span>(messageHandler.<span class="title function_">callback</span>(message.<span class="property">data</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">close</span>(<span class="params">server</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ws server close&#x27;</span>);</span><br><span class="line">        server.<span class="title function_">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.ts 使用适配器</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">useWebSocketAdapter</span>(<span class="keyword">new</span> <span class="title class_">WsAdapter</span>(app));</span><br></pre></td></tr></table></figure><p><img src="/2024/08/10/NestJs/NestJs%E8%B0%83%E7%94%A8%E6%96%87%E5%BF%83Api/1.png" alt="效果图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;最近想实现个人的应用调用gpt，并返回内容&lt;/p&gt;
&lt;p&gt;一开始想尝试本地部署大模型，再使用对应API，在查看了各个模型需求的配置后&lt;/p&gt;
&lt;p&gt;感觉自己的电脑有些吃力，就选择调用现有大模型的API来使用&lt;/p&gt;
&lt;p&gt;因</summary>
      
    
    
    
    <category term="NestJs" scheme="http://mxe23.cn/categories/NestJs/"/>
    
    
    <category term="nestjs" scheme="http://mxe23.cn/tags/nestjs/"/>
    
    <category term="typescript" scheme="http://mxe23.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>NestJs 实现docx转换pdf</title>
    <link href="http://mxe23.cn/2024/07/20/NestJs/NestJS%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2/"/>
    <id>http://mxe23.cn/2024/07/20/NestJs/NestJS%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2/</id>
    <published>2024-07-19T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.615Z</updated>
    
    <content type="html"><![CDATA[<p>使用前需要先 LibreOffice</p><p>使用到的node库是 <code>libreoffice-convert</code></p><p><a href="https://www.npmjs.com/package/libreoffice-convert">libreoffice-convert - npm (npmjs.com)</a></p><p>在完成文件转换后，会将文件上传至minio</p><p>controller.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Post</span>, <span class="title class_">UseInterceptors</span>, <span class="title class_">UploadedFile</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OtherService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./other.service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FileInterceptor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/platform-express&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&#x27;other&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">OtherController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> reimport &#123; Controller, Post, UploadedFile, UseInterceptors &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span></span><br><span class="line"><span class="params"><span class="keyword">import</span> &#123; OfficeService &#125; <span class="keyword">from</span> <span class="string">&#x27;./office.service&#x27;</span>;</span></span><br><span class="line"><span class="params"><span class="keyword">import</span> &#123; FileInterceptor &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/platform-express&#x27;</span>;</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params"><span class="meta">@Controller</span>(<span class="string">&#x27;office&#x27;</span>)</span></span><br><span class="line"><span class="params"><span class="keyword">export</span> <span class="keyword">class</span> OfficeController &#123;</span></span><br><span class="line"><span class="params">    constructor(<span class="keyword">private</span> <span class="keyword">readonly</span> service:OfficeService) &#123;&#125;</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">    @Post(<span class="string">&#x27;topdf&#x27;</span>)</span></span><br><span class="line"><span class="params">    @UseInterceptors(FileInterceptor(<span class="string">&#x27;file&#x27;</span>))</span></span><br><span class="line"><span class="params">    <span class="keyword">async</span> docxToPdf(@UploadedFile() file: Express.Multer.File) &#123;</span></span><br><span class="line"><span class="params">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.service.docxToPdf(file)</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">adonly other: OtherService</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&#x27;removebg&#x27;</span>)</span><br><span class="line">    <span class="meta">@UseInterceptors</span>(<span class="title class_">FileInterceptor</span>(<span class="string">&#x27;file&#x27;</span>))</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">removeBg</span>(<span class="params"><span class="meta">@UploadedFile</span>() file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">other</span>.<span class="title function_">removeBg</span>(file)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; unlinkSync, writeFileSync &#125; <span class="keyword">from</span> <span class="string">&#x27;fs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MinioService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;src/minio/minio.service&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> libre = <span class="built_in">require</span>(<span class="string">&#x27;libreoffice-convert&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">OfficeService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> minioService: MinioService</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">minioService</span>.<span class="title function_">init</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    bucket = <span class="string">&#x27;mxe-app&#x27;</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">docxToPdf</span>(<span class="params">file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; <span class="attr">buffer</span>: docxBuf, fileName &#125; = <span class="variable language_">this</span>.<span class="title function_">filterFile</span>(file)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">trans</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                libre.<span class="title function_">convert</span>(docxBuf, <span class="string">&#x27;.pdf&#x27;</span>, <span class="literal">undefined</span>, <span class="function">(<span class="params">err, outputBuf</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        <span class="title function_">reject</span>(err)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="title function_">resolve</span>(outputBuf)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="attr">outputBuf</span>: <span class="built_in">any</span> = <span class="keyword">await</span> <span class="title function_">trans</span>()</span><br><span class="line">        <span class="comment">// 转换后的文件</span></span><br><span class="line">        <span class="keyword">const</span> writeName = <span class="title function_">join</span>(__dirname, <span class="string">&#x27;../../&#x27;</span>, <span class="string">&#x27;/public/docx/&#x27;</span> + fileName + <span class="string">&quot;.pdf&quot;</span>)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">writeFileSync</span>(writeName, outputBuf);</span><br><span class="line">        <span class="comment">// 上传文件后删除本地文件</span></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">minioService</span>.<span class="title function_">uploadFile</span>(<span class="variable language_">this</span>.<span class="property">bucket</span>, <span class="string">`pdf/<span class="subst">$&#123;fileName&#125;</span>.pdf`</span>, writeName, &#123;&#125;)</span><br><span class="line">        <span class="title function_">unlinkSync</span>(writeName)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">data</span>: <span class="string">&#x27;http://192.168.31.253:9000/mxe-app/&#x27;</span> + <span class="string">`pdf/<span class="subst">$&#123;fileName&#125;</span>.pdf`</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">filterFile</span>(<span class="params">file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="comment">// 二进制数据，原始文件名</span></span><br><span class="line">        <span class="keyword">const</span> &#123; buffer, originalname &#125; = file</span><br><span class="line">        <span class="keyword">const</span> extIndex = originalname.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">        <span class="keyword">const</span> fileName = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(originalname.<span class="title function_">slice</span>(<span class="number">0</span>, extIndex), <span class="string">&quot;latin1&quot;</span>).<span class="title function_">toString</span>(<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        <span class="comment">// 后缀名</span></span><br><span class="line">        <span class="keyword">const</span> ext = originalname.<span class="title function_">slice</span>(extIndex + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            buffer,</span><br><span class="line">            fileName,</span><br><span class="line">            ext</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用前需要先 LibreOffice&lt;/p&gt;
&lt;p&gt;使用到的node库是 &lt;code&gt;libreoffice-convert&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/libreoffice-convert&quot;&gt;</summary>
      
    
    
    
    <category term="NestJs" scheme="http://mxe23.cn/categories/NestJs/"/>
    
    
    <category term="nestjs" scheme="http://mxe23.cn/tags/nestjs/"/>
    
    <category term="typescript" scheme="http://mxe23.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>NestJs 使用removeBg api 实现图片去背景</title>
    <link href="http://mxe23.cn/2024/01/12/NestJs/NestJS%E5%9B%BE%E7%89%87%E5%8E%BB%E8%83%8C%E6%99%AF/"/>
    <id>http://mxe23.cn/2024/01/12/NestJs/NestJS%E5%9B%BE%E7%89%87%E5%8E%BB%E8%83%8C%E6%99%AF/</id>
    <published>2024-01-11T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.617Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.remove.bg/zh">removeBg</a> 之前一直使用的图片去背景工具<br>可以使用api集成其他平台，每月有50次免费调用次数<br><a href="https://www.remove.bg/zh">api 文档</a><br>文档中有nodejs示例，这里使用Nestjs改写了下</p><p>controller.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Post</span>, <span class="title class_">UseInterceptors</span>, <span class="title class_">UploadedFile</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OtherService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./other.service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FileInterceptor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/platform-express&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&#x27;other&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">OtherController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> other: OtherService</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&#x27;removebg&#x27;</span>)</span><br><span class="line">    <span class="meta">@UseInterceptors</span>(<span class="title class_">FileInterceptor</span>(<span class="string">&#x27;file&#x27;</span>))</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">removeBg</span>(<span class="params"><span class="meta">@UploadedFile</span>() file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">other</span>.<span class="title function_">removeBg</span>(file)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; writeFileSync &#125; <span class="keyword">from</span> <span class="string">&#x27;fs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FormData</span> = <span class="built_in">require</span>(<span class="string">&#x27;form-data&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">OtherService</span> &#123;</span><br><span class="line">    <span class="comment">// 调用 remove bg api 去除图片背景</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="variable constant_">RMBG_API_KEY</span> = <span class="string">&#x27;自己的KEY&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">removeBg</span>(<span class="params">file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; buffer, ext, fileName &#125; = <span class="variable language_">this</span>.<span class="title function_">filterFile</span>(file)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;auto&#x27;</span>);</span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;image_file&#x27;</span>, buffer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; data, status, statusText &#125; = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;https://api.remove.bg/v1.0/removebg&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: formData,</span><br><span class="line">            <span class="attr">responseType</span>: <span class="string">&#x27;arraybuffer&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;X-Api-Key&#x27;</span>: <span class="variable language_">this</span>.<span class="property">RMBG_API_KEY</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span> (status != <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">success</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">msg</span>: statusText</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将根目录下的public设置为了静态文件目录，所以将文件存储至public下的img下</span></span><br><span class="line">        <span class="keyword">const</span> writeName = <span class="title function_">join</span>(__dirname, <span class="string">&#x27;../../public/img/&#x27;</span>, fileName + <span class="string">&quot;_no-bg.png&quot;</span>)</span><br><span class="line">        <span class="title function_">writeFileSync</span>(writeName, data);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">msg</span>: fileName + <span class="string">&quot;_no-bg.png&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 处理文件数据</span></span><br><span class="line">    <span class="title function_">filterFile</span>(<span class="params">file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="comment">// 二进制数据，原始文件名</span></span><br><span class="line">        <span class="keyword">const</span> &#123; buffer, originalname &#125; = file</span><br><span class="line">        <span class="keyword">const</span> extIndex = originalname.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">        <span class="keyword">const</span> fileName = originalname.<span class="title function_">slice</span>(<span class="number">0</span>, extIndex);</span><br><span class="line">        <span class="comment">// 后缀名</span></span><br><span class="line">        <span class="keyword">const</span> ext = originalname.<span class="title function_">slice</span>(extIndex + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            buffer,</span><br><span class="line">            fileName,</span><br><span class="line">            ext</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.remove.bg/zh&quot;&gt;removeBg&lt;/a&gt; 之前一直使用的图片去背景工具&lt;br&gt;可以使用api集成其他平台，每月有50次免费调用次数&lt;br&gt;&lt;a href=&quot;https://www.remove.bg/zh&quot;&gt;api 文档</summary>
      
    
    
    
    <category term="NestJs" scheme="http://mxe23.cn/categories/NestJs/"/>
    
    
    <category term="nestjs" scheme="http://mxe23.cn/tags/nestjs/"/>
    
    <category term="typescript" scheme="http://mxe23.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>NestJs 调用讯飞OCR</title>
    <link href="http://mxe23.cn/2024/01/08/NestJs/NestJs%E8%B0%83%E7%94%A8%E8%AE%AF%E9%A3%9EOCR/"/>
    <id>http://mxe23.cn/2024/01/08/NestJs/NestJs%E8%B0%83%E7%94%A8%E8%AE%AF%E9%A3%9EOCR/</id>
    <published>2024-01-07T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.615Z</updated>
    
    <content type="html"><![CDATA[<p>需要安装 crypto-js axios<br>iflytek.service.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HmacSHA256</span>, enc &#125; <span class="keyword">from</span> <span class="string">&#x27;crypto-js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">IflytekService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable constant_">OCR_SECRET</span> = <span class="string">&#x27;自己的Secret&#x27;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable constant_">OCR_KEY</span> = <span class="string">&#x27;自己的key&#x27;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable constant_">OCR_APPID</span> = <span class="string">&#x27;自己的appid&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">ocr</span>(<span class="params">file: Express.Multer.File</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toUTCString</span>()</span><br><span class="line">        <span class="keyword">const</span> host = <span class="string">&#x27;api.xf-yun.com&#x27;</span></span><br><span class="line">        <span class="comment">// 签名原始字符</span></span><br><span class="line">        <span class="keyword">const</span> signature_origin = <span class="string">&quot;host: api.xf-yun.com\n&quot;</span> + <span class="string">&quot;date: &quot;</span> + date + <span class="string">&quot;\nPOST /v1/private/sf8e6aca1 HTTP/1.1&quot;</span></span><br><span class="line">        <span class="comment">// 签名</span></span><br><span class="line">        <span class="keyword">const</span> signature = enc.<span class="property">Base64</span>.<span class="title function_">stringify</span>(<span class="title class_">HmacSHA256</span>(signature_origin, <span class="variable language_">this</span>.<span class="property">OCR_SECRET</span>))</span><br><span class="line">        <span class="comment">// authorization原始字符</span></span><br><span class="line">        <span class="keyword">const</span> authorization_origin = <span class="string">`api_key=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.OCR_KEY&#125;</span>&quot;,algorithm=&quot;hmac-sha256&quot;,headers=&quot;host date request-line&quot;,signature=&quot;<span class="subst">$&#123;signature&#125;</span>&quot;`</span></span><br><span class="line">        <span class="keyword">const</span> authorization = enc.<span class="property">Base64</span>.<span class="title function_">stringify</span>(enc.<span class="property">Utf8</span>.<span class="title function_">parse</span>(authorization_origin));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> fileStr = file.<span class="property">originalname</span>.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        <span class="keyword">const</span> filetype = fileStr[fileStr.<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> imageData = file.<span class="property">buffer</span>.<span class="title function_">toString</span>(<span class="string">&quot;base64&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> &#123; data,statusText &#125; = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">`https://api.xf-yun.com/v1/private/sf8e6aca1?authorization=<span class="subst">$&#123;authorization&#125;</span>&amp;host=<span class="subst">$&#123;host&#125;</span>&amp;date=<span class="subst">$&#123;date&#125;</span>`</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">header</span>: &#123;</span><br><span class="line">                    <span class="attr">app_id</span>: <span class="variable language_">this</span>.<span class="property">OCR_APPID</span>,</span><br><span class="line">                    <span class="attr">status</span>: <span class="number">3</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parameter</span>: &#123;</span><br><span class="line">                    <span class="attr">sf8e6aca1</span>: &#123;</span><br><span class="line">                        <span class="attr">category</span>: <span class="string">&quot;ch_en_public_cloud&quot;</span>,</span><br><span class="line">                        <span class="attr">result</span>: &#123;</span><br><span class="line">                            <span class="attr">encoding</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                            <span class="attr">compress</span>: <span class="string">&quot;raw&quot;</span>,</span><br><span class="line">                            <span class="attr">format</span>: <span class="string">&quot;json&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">payload</span>: &#123;</span><br><span class="line">                    <span class="attr">sf8e6aca1_data_1</span>: &#123;</span><br><span class="line">                        <span class="attr">encoding</span>: filetype,</span><br><span class="line">                        <span class="attr">status</span>: <span class="number">3</span>,</span><br><span class="line">                        <span class="attr">image</span>: imageData</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span>(data?.<span class="property">payload</span>?.<span class="property">result</span>?.<span class="property">text</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> words = enc.<span class="property">Base64</span>.<span class="title function_">parse</span>(data?.<span class="property">payload</span>?.<span class="property">result</span>?.<span class="property">text</span>)</span><br><span class="line">            <span class="keyword">const</span> str = enc.<span class="property">Utf8</span>.<span class="title function_">stringify</span>(words)</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">success</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;需要安装 crypto-js axios&lt;br&gt;iflytek.service.ts&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="NestJs" scheme="http://mxe23.cn/categories/NestJs/"/>
    
    
    <category term="nestjs" scheme="http://mxe23.cn/tags/nestjs/"/>
    
    <category term="typescript" scheme="http://mxe23.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>ARM Linux 下 编译 AWS SDK for C++ S3 连接minio及注意事项</title>
    <link href="http://mxe23.cn/2023/12/18/C++/armLinuxMino/"/>
    <id>http://mxe23.cn/2023/12/18/C++/armLinuxMino/</id>
    <published>2023-12-17T16:00:00.000Z</published>
    <updated>2024-09-08T10:11:43.625Z</updated>
    
    <content type="html"><![CDATA[<p>最近开发需要实现自建对象存储，并在linux上连接<br>因为原有的程序是C++的，所以需要C++或C的库，但是minio提供的miniocpp没有编译成功<br><a href="https://github.com/minio/minio-cpp">miniocpp</a><br>因为minio符合S3标准，所以也可使用 AWS 的SDK<br><a href="https://docs.aws.amazon.com/zh_cn/sdk-for-cpp/v1/developer-guide/setup-linux.html">编译文档</a></p><h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev</span><br></pre></td></tr></table></figure><h3 id="2-下载源码"><a href="#2-下载源码" class="headerlink" title="2. 下载源码"></a>2. 下载源码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">https</span></span><br><span class="line">git clone --recurse-submodules https://github.com/aws/aws-sdk-cpp</span><br><span class="line"><span class="meta"># </span><span class="language-bash">ssh</span></span><br><span class="line">git clone --recurse-submodules git@github.com:aws/aws-sdk-cpp.git</span><br></pre></td></tr></table></figure><h3 id="3-从源代码构建SDK"><a href="#3-从源代码构建SDK" class="headerlink" title="3. 从源代码构建SDK"></a>3. 从源代码构建SDK</h3><ol><li>创建目录<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir sdk_build</span><br><span class="line">cd sdk_build</span><br></pre></td></tr></table></figure></li><li>生成构建文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake ../aws-sdk-cpp -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/firefly/workspace/install -DBUILD_ONLY=&quot;s3&quot; -DENABLE_TESTING=OFF</span><br><span class="line"><span class="meta"># </span><span class="language-bash">make</span></span><br><span class="line">make DESTDIR=/home/firefly/workspace/install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>运行结束即可在 /home/firefly/workspace/install 目录下看到 include 和 lib 文件夹，其中就是头文件和动态库<br><img src="/2023/12/18/C++/armLinuxMino/1.png"><br><img src="/2023/12/18/C++/armLinuxMino/2.png"><h3 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4. 注意事项"></a>4. 注意事项</h3></li><li>cmake 版本<br>最低版本为 3.13</li><li>关闭测试<br>在运行cmake时需要加上 -DENABLE_TESTING=OFF 关闭测试服务，仅构建S3时不需要运行测试，会导致后续make失败</li><li>调用动态库时报错<br>在调用动态库时，报未找到CURL4之类的错误，查看curl的引用或者版本是否有误</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近开发需要实现自建对象存储，并在linux上连接&lt;br&gt;因为原有的程序是C++的，所以需要C++或C的库，但是minio提供的miniocpp没有编译成功&lt;br&gt;&lt;a href=&quot;https://github.com/minio/minio-cpp&quot;&gt;miniocpp&lt;/</summary>
      
    
    
    
    <category term="C++" scheme="http://mxe23.cn/categories/C/"/>
    
    
    <category term="c++" scheme="http://mxe23.cn/tags/c/"/>
    
    <category term="linux" scheme="http://mxe23.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>AI绘画尝试</title>
    <link href="http://mxe23.cn/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/"/>
    <id>http://mxe23.cn/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/</id>
    <published>2023-03-27T16:00:00.000Z</published>
    <updated>2024-09-03T17:28:01.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><p><a href="https://www.bilibili.com/video/BV17d4y1C73R/?spm_id_from=333.999.0.0">整合包</a></p><p><a href="https://civitai.com/">civiai</a></p><h1 id="使用过程"><a href="#使用过程" class="headerlink" title="使用过程"></a>使用过程</h1><h2 id="1-解压缩"><a href="#1-解压缩" class="headerlink" title="1. 解压缩"></a>1. 解压缩</h2><p>解压后的整合包目录<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/01.png" alt="目录"></p><h2 id="2-填写用户协议"><a href="#2-填写用户协议" class="headerlink" title="2. 填写用户协议"></a>2. 填写用户协议</h2><p><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/02.png" alt="用户协议"></p><p><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/03.png" alt="填写"></p><h2 id="3-启动"><a href="#3-启动" class="headerlink" title="3. 启动"></a>3. 启动</h2><p>双击 A启动器.exe<br>点击一键启动</p><p><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/04.png" alt="启动"></p><p>等待浏览器打开网页<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/05.png" alt="启动成功"></p><h1 id="生成-AI-绘画"><a href="#生成-AI-绘画" class="headerlink" title="生成 AI 绘画"></a>生成 AI 绘画</h1><p>输入关键词，导入配置后生成即可<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/06.png" alt="生成"></p><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><h2 id="添加-stable-diffusion-模型"><a href="#添加-stable-diffusion-模型" class="headerlink" title="添加 stable diffusion 模型"></a>添加 stable diffusion 模型</h2><p>在启动器的模型列表中找到需要使用的模型，下载后添加<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/07.png" alt="模型列表"><br>重启应用即可<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/08.png" alt="模型列表"></p><h2 id="添加-lora-模型"><a href="#添加-lora-模型" class="headerlink" title="添加 lora 模型"></a>添加 lora 模型</h2><h3 id="1-下载-lora-模型"><a href="#1-下载-lora-模型" class="headerlink" title="1. 下载 lora 模型"></a>1. 下载 lora 模型</h3><p>在 civiai 网站上 找到喜欢的 ai 模型<br>在启动器中添加</p><h3 id="2-使用模型"><a href="#2-使用模型" class="headerlink" title="2. 使用模型"></a>2. 使用模型</h3><p>点击 lora 插件，点击启动，选择模型<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/09.png" alt="使用模型"></p><h3 id="3-设置参数"><a href="#3-设置参数" class="headerlink" title="3. 设置参数"></a>3. 设置参数</h3><p>在 civiai 中找到，或自己输入相应的关键词<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/10.png" alt="civiai"></p><p>输入后导入配置<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/11.png" alt="配置"></p><p>选择之前下载的 loar 模型<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/12.png" alt="使用模型"></p><p>点击生成，等待生成成功<br><img src="/2023/03/28/Share/AI%E7%BB%98%E7%94%BB%E5%B0%9D%E8%AF%95/13.png" alt="生成成功"></p>]]></content>
    
    
    <summary type="html">根据秋叶大佬等人的B站视频，基于 stable diffusion 的 AI 绘画尝试</summary>
    
    
    
    <category term="分享文章" scheme="http://mxe23.cn/categories/%E5%88%86%E4%BA%AB%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="AI" scheme="http://mxe23.cn/tags/AI/"/>
    
    <category term="分享" scheme="http://mxe23.cn/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>uniapp安卓原生插件封装</title>
    <link href="http://mxe23.cn/2022/08/21/uniapp/uniapp%E5%AE%89%E5%8D%93%E5%8E%9F%E7%94%9F%E6%8F%92%E4%BB%B6%E5%B0%81%E8%A3%85/"/>
    <id>http://mxe23.cn/2022/08/21/uniapp/uniapp%E5%AE%89%E5%8D%93%E5%8E%9F%E7%94%9F%E6%8F%92%E4%BB%B6%E5%B0%81%E8%A3%85/</id>
    <published>2022-08-20T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>uniapp 原生插件封装的过程及注意事项</p><span id="more"></span></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="android-studio"><a href="#android-studio" class="headerlink" title="android studio"></a>android studio</h3><p><a href="https://developer.android.google.cn/">https://developer.android.google.cn/</a><br>uniapp app 并没有直接调用 外部 jar，arr 文件类以及方法的能力，需要经过特定方式对原有的代码进行二次封装<br>最后输出为 aar 文件，以插件的形式进行导入</p><h3 id="HbuilderX"><a href="#HbuilderX" class="headerlink" title="HbuilderX"></a>HbuilderX</h3><p>DCloud 官方的开发工具，uniapp 的打包，发布，调试等，都需要使用<br>下载真机运行插件<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660803332833-d1687654-2730-4dbb-8736-dd2ebd28bf13.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=421&id=u9ea20d52&margin=%5Bobject%20Object%5D&name=image.png&originHeight=421&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55101&status=done&style=none&taskId=u719c1967-a769-4e37-88d4-dfed894595f&title=&width=819" alt="image.png"></p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p><a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android">https://nativesupport.dcloud.net.cn/AppDocs/download/android</a><br>DCloud 官方提供的第三方插件开发DEMO 示例，在此基础上开发会更加简单</p><h3 id="依赖的文件（jar、aar等）"><a href="#依赖的文件（jar、aar等）" class="headerlink" title="依赖的文件（jar、aar等）"></a>依赖的文件（jar、aar等）</h3><p>第三方提供的一些特定功能的接口等，没有则跳过</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="插件类型"><a href="#插件类型" class="headerlink" title="插件类型"></a>插件类型</h3><ul><li>Module 不包含 UI 界面的 特定功能</li><li>Component  实现特别功能的 Native 控件</li></ul><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><h3 id="DCloud-安卓插件开发教程"><a href="#DCloud-安卓插件开发教程" class="headerlink" title="DCloud 安卓插件开发教程"></a>DCloud 安卓插件开发教程</h3><p><a href="https://nativesupport.dcloud.net.cn/NativePlugin/course/android">https://nativesupport.dcloud.net.cn/NativePlugin/course/android</a></p><p><a href="https://www.yuque.com/attachments/yuque/0/2022/pdf/22526171/1660889924544-f47aa0be-13e4-485e-8a74-44efcf35e191.pdf">成为SDK开发指导v1.0.pdf</a></p><h2 id="开发与调试"><a href="#开发与调试" class="headerlink" title="开发与调试"></a>开发与调试</h2><h3 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h3><p>解压 SDK文件<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660803971272-f38da7af-c36d-449f-8c67-6265b16d5e62.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=624&id=u9bb5cb40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=624&originWidth=1053&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55039&status=done&style=none&taskId=u047e5db7-3a7a-4870-925e-e509a154225&title=&width=1053" alt="image.png"><br>其中 UniPlugin-Hello-AS 目录是 android 项目目录<br>打开anroid studio，点击 open，选择到对应的项目，点击OK<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660804123325-94880f43-2134-473c-8bb2-a49c0d02dfdd.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=748&id=u1a4fc75b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=748&originWidth=984&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61524&status=done&style=none&taskId=u1b6895e3-635f-47d7-b36c-e76d4c6faf6&title=&width=984" alt="image.png"></p><p>出现代理设置的窗口时，勾选上选框，选择 NO 即可<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660804191684-cf3e170a-cf28-4fa2-9687-5a61c5328e1d.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=637&id=u156265f8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=637&originWidth=759&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33554&status=done&style=none&taskId=ub1527c95-79de-4e55-991c-5db92cd372f&title=&width=759" alt="image.png"></p><p>如果当前已有打开的项目目录，选择 file -&gt; Close Project 关闭项目后，再打开项目即可<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660804256985-82d66e5c-e789-4507-88b3-581feaeec905.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=558&id=uc7418376&margin=%5Bobject%20Object%5D&name=image.png&originHeight=558&originWidth=946&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45931&status=done&style=none&taskId=u5bbeca0c-6576-4c14-ad0e-08de3eab431&title=&width=946" alt="image.png"></p><h3 id="新建-Module"><a href="#新建-Module" class="headerlink" title="新建 Module"></a>新建 Module</h3><p>将项目目录设置为 Project 形式<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660805140066-e0b836d7-8a25-4acd-9294-8dcfce9c2b02.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=303&id=u09548398&margin=%5Bobject%20Object%5D&name=image.png&originHeight=303&originWidth=505&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14504&status=done&style=none&taskId=u946c8a27-cf1e-4b9e-898f-b01db8643d4&title=&width=505" alt="image.png"><br>在根目录下 新增-&gt; Module<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660805211749-8c90ef68-4f6b-4031-a523-fc412a5497b8.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=467&id=u91a6a8bf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=467&originWidth=1073&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62913&status=done&style=none&taskId=ud62b90ad-55fb-4bf4-bf55-70706058fac&title=&width=1073" alt="image.png"><br>选择 Android Library ，填好对应项目，点击Finish<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660805365341-4b7b2684-572a-4856-98aa-4e918a4d00f3.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=528&id=u49f5d907&margin=%5Bobject%20Object%5D&name=image.png&originHeight=528&originWidth=716&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34061&status=done&style=none&taskId=ucefe9888-0dbb-4b38-aaa2-47a29d36e37&title=&width=716" alt="image.png"></p><h3 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h3><h4 id="新增类"><a href="#新增类" class="headerlink" title="新增类"></a>新增类</h4><p>在新增模块的指定包下新建 java 类，后续会在此处编辑插件的功能代码<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660871340792-b3f5f3f1-c2d6-40cb-a07b-9b3a961264a9.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=910&id=ua7576e41&margin=%5Bobject%20Object%5D&name=image.png&originHeight=910&originWidth=1071&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94984&status=done&style=none&taskId=u860a5b1a-4e74-473f-8997-af2718f2bec&title=&width=1071" alt="image.png"></p><h4 id="配置-gradle"><a href="#配置-gradle" class="headerlink" title="配置 gradle"></a>配置 gradle</h4><p>打开新增模块下的 build.gradle，将 uniplugin_richalert 模块下的 build.gradle 中的内容 复制进去<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660805456066-7b7d5cdd-f3a1-44c5-adb1-3e7c12dd1b00.png#clientId=uac834df7-ee49-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=610&id=u292c5339&margin=%5Bobject%20Object%5D&name=image.png&originHeight=610&originWidth=483&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32832&status=done&style=none&taskId=uf47c9448-172f-4ba6-b62c-dee5f53e71f&title=&width=483" alt="image.png"></p><h4 id="配置依赖"><a href="#配置依赖" class="headerlink" title="配置依赖"></a>配置依赖</h4><p>uniapp-v8-release.aar 是插件必须依赖的包<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660871743173-d543639f-b4d7-4493-91e6-5422b96a64af.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=317&id=ucb89401f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=868&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35697&status=done&style=none&taskId=ufa64cbb5-0552-41bc-8cd4-4fd409f8e82&title=&width=868" alt="image.png"><br>如果有其他需要依赖的包，jar 文件可以放在 模块下的 libs 文件夹内<br>如果是 aar 在项目根目录新建一个 libs 文件，放在其中（放在模块的libs中会导致打包报错）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660871924106-2489e0d5-9725-4021-bde9-9cbee6014003.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=545&id=u346a23d0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=545&originWidth=503&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31264&status=done&style=none&taskId=ufd9cc34c-1a6d-42ba-996c-66c02f49351&title=&width=503" alt="image.png"><br>在 根目录下 setting.gradle 中 新增 libs 目录<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872019193-2001bec6-5914-4336-9278-b80d9e4fb19b.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=242&id=KaF8e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=242&originWidth=425&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19624&status=done&style=none&taskId=u80ac3737-2c17-4892-b213-017890acaef&title=&width=425" alt="image.png"><br>配置根目录的 build.gradle<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872336035-331cc10e-6eeb-4150-b125-c779bc4cdd1e.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=390&id=uf36c856b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=390&originWidth=615&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25665&status=done&style=none&taskId=u10a32f09-168f-4bde-9398-c4665dc3ab6&title=&width=615" alt="image.png"><br>在模块下添加 aar 的依赖<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872420477-7577a953-efe2-4c84-930c-d652735ad3b7.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=346&id=u2e99b842&margin=%5Bobject%20Object%5D&name=image.png&originHeight=346&originWidth=701&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40390&status=done&style=none&taskId=u5990594f-e0cb-44f9-b13c-a76a0a6b1eb&title=&width=701" alt="image.png"></p><h4 id="配置插件-1"><a href="#配置插件-1" class="headerlink" title="配置插件"></a>配置插件</h4><p>app -&gt; src -&gt; main -&gt; dcloud_uniplugins.json 中 配置插件<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872081246-ad79f02d-10fa-4d24-9c47-86abc171a138.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=780&id=ud607c4c0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=780&originWidth=1140&originalType=binary&ratio=1&rotation=0&showTitle=false&size=99217&status=done&style=none&taskId=u1006bc7d-efa1-4979-82f0-757b998639e&title=&width=1140" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872177994-49c44bc5-549e-4b2e-97b4-6361054565eb.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=241&id=u7f1e5124&margin=%5Bobject%20Object%5D&name=image.png&originHeight=241&originWidth=559&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19231&status=done&style=none&taskId=u6c3e1a6e-3e19-4d5c-b6ce-2902c7ed6b0&title=&width=559" alt="image.png"></p><h4 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h4><p>点击构建按钮，成功后开始编写插件代码<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660872482688-fc543379-741b-421d-9f15-c5098ac374f3.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=1050&id=u37e80325&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1050&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=194885&status=done&style=none&taskId=ue5e0f661-ac53-4e45-a61b-00c6a64c329&title=&width=1920" alt="image.png"></p><h3 id="插件功能开发"><a href="#插件功能开发" class="headerlink" title="插件功能开发"></a>插件功能开发</h3><p>插件类需要集成 UniModule<br>暴露给 uniapp 的方法需要用 @ UniJSMethod 修饰<br>通过 callback.invoke 给 调用方法的回调函数返回数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sinoma.uhf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.annotation.UniJSMethod;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.bridge.UniJSCallback;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.common.UniModule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UHFModule</span> <span class="keyword">extends</span> <span class="title class_">UniModule</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@UniJSMethod</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(JSONObject json, UniJSCallback callback)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> json.getIntValue(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> json.getIntValue(<span class="string">&quot;b&quot;</span>);</span><br><span class="line"></span><br><span class="line">        callback.invoke(<span class="keyword">new</span> <span class="title class_">JSONObject</span>()&#123;&#123;</span><br><span class="line">            put(<span class="string">&quot;code&quot;</span>,<span class="number">0</span>);</span><br><span class="line">            put(<span class="string">&quot;data&quot;</span>, a + b);</span><br><span class="line">        &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UniApp-项目配置"><a href="#UniApp-项目配置" class="headerlink" title="UniApp 项目配置"></a>UniApp 项目配置</h2><h3 id="新建应用"><a href="#新建应用" class="headerlink" title="新建应用"></a>新建应用</h3><p><a href="https://dev.dcloud.net.cn/#/pages/app/list">https://dev.dcloud.net.cn/#/pages/app/list</a><br>登录 DCloud 开发者中心<br>点击创建应用<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877182701-a5912c9e-8b68-488e-a231-17b0a606e29f.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=979&id=u39f626f3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=979&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=83043&status=done&style=none&taskId=uacf7fdec-ef2c-4106-ac2e-04700a4e356&title=&width=1920" alt="image.png"><br>填写对应信息<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877129418-2162b37d-f03c-457e-afbb-b0085b7c7214.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=426&id=uffdf0336&margin=%5Bobject%20Object%5D&name=image.png&originHeight=426&originWidth=736&originalType=binary&ratio=1&rotation=0&showTitle=false&size=12270&status=done&style=none&taskId=udcb057ae-edfb-4191-b5b6-c3be4e9ca2d&title=&width=736" alt="image.png"></p><h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h3><p>点击应用名称 -&gt; 离线打包 key 管理<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877408486-917effb0-9e02-4279-8dd8-4985cb4ea7d1.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=812&id=u8eda9847&margin=%5Bobject%20Object%5D&name=image.png&originHeight=812&originWidth=1303&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50505&status=done&style=none&taskId=uf1893956-6eda-4220-8caa-09127b2da2c&title=&width=1303" alt="image.png"><br>根据操作指引生成证书后，填写到 sha1签名中<br>Android 包名 和 iOS BundleId 都填写成 插件的 applicationId<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877670410-ba23b8da-7093-4c15-94af-2dad4d4e0065.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=611&id=ue6e06a57&margin=%5Bobject%20Object%5D&name=image.png&originHeight=611&originWidth=1324&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103565&status=done&style=none&taskId=u8335cd8f-faf6-46eb-8019-dbd393486a0&title=&width=1324" alt="image.png"><br>全部填写完成后，点击保存生成 android 和 ios 的app key</p><p>将生成的 keystore 文件 放入 app 文件夹内<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877748926-a56774af-6002-499c-bf87-a2d3ba4f1762.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=266&id=u27647a47&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=446&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15013&status=done&style=none&taskId=ue92f1a9c-2f94-47c4-85b0-1960996ea2f&title=&width=446" alt="image.png"><br>配置 app-&gt; build.gradle 的 证书<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877787118-02c1dfdb-ee5c-4a24-981c-4becf0a35a95.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=273&id=u669c5346&margin=%5Bobject%20Object%5D&name=image.png&originHeight=273&originWidth=629&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21674&status=done&style=none&taskId=ue77f03e4-0e9b-4ea5-b9c2-a9acc47387b&title=&width=629" alt="image.png"><br>打开 app -&gt; src -&gt; main -&gt; AndroidManifest.xml 配置生成的 app key<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877931913-9293a5ed-bb1e-4f27-bc48-0183caa0a745.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=828&id=ud61cebe2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=828&originWidth=1879&originalType=binary&ratio=1&rotation=0&showTitle=false&size=165264&status=done&style=none&taskId=u839dd2d2-e2b6-4c3d-9dbc-949e6fbb7fe&title=&width=1879" alt="image.png"></p><h3 id="编写前端测试代码"><a href="#编写前端测试代码" class="headerlink" title="编写前端测试代码"></a>编写前端测试代码</h3><p>新建 uniapp 项目，注意项目名和 开发者中心的 应用名称保持一致，同时 HBuilderX要登录 开发者账号<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878098641-b9d42c9a-7dbc-4c49-bda0-6d32f195f8c8.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=970&id=uca6a108b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=970&originWidth=1168&originalType=binary&ratio=1&rotation=0&showTitle=false&size=199021&status=done&style=none&taskId=ubff2c29e-2f86-40b6-ae90-8a63e620018&title=&width=1168" alt="image.png"><br>在 manifest.json 中 查看 appId和开发者中心的应用 appId 是否保持一致，不一致需要重新获取<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878146905-c047eb34-44d6-43c6-89d4-c696846a7e1e.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=921&id=uecc15810&margin=%5Bobject%20Object%5D&name=image.png&originHeight=921&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=83325&status=done&style=none&taskId=ude10c904-f9fe-480d-8ab2-eeded29073c&title=&width=1920" alt="image.png"></p><p>在uniapp 中的测试页中写好对插件的引用，以及一些测试<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660877988075-6e841294-992b-4b4e-a858-b4dc38575d77.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=921&id=uff243a57&margin=%5Bobject%20Object%5D&name=image.png&originHeight=921&originWidth=1589&originalType=binary&ratio=1&rotation=0&showTitle=false&size=84757&status=done&style=none&taskId=u981c134b-b042-43eb-9d94-141476d233f&title=&width=1589" alt="image.png"><br>写完测试代码后，点击发行，生成本地打包资源<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878257347-2a8cc3ac-06ee-4dd5-82b7-e1a1574f7b14.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=588&id=ub95fb8bb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=588&originWidth=927&originalType=binary&ratio=1&rotation=0&showTitle=false&size=75137&status=done&style=none&taskId=u26ab09fc-0318-4846-b9fd-bde7aa8817c&title=&width=927" alt="image.png"><br>资源打包完成以后，将 app -&gt; src -&gt; main -&gt; assets -&gt; app 内文件夹删除，替换为打包生成的文件<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878388358-bf49d546-db96-4c8b-87db-edd846f8b053.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=573&id=ubb695a93&margin=%5Bobject%20Object%5D&name=image.png&originHeight=573&originWidth=1040&originalType=binary&ratio=1&rotation=0&showTitle=false&size=37252&status=done&style=none&taskId=u9ba69bda-ea88-410a-88d1-a6d46ab80ca&title=&width=1040" alt="image.png"></p><h3 id="连接设备"><a href="#连接设备" class="headerlink" title="连接设备"></a>连接设备</h3><p>使用 usb 连接 电脑，打开设备的开发模式后，开启usb调试，安装等功能<br>连接成功后，运行环境中会多出对应的设备<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878794995-87d60d2a-000c-4871-adcc-680eefe4f223.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=248&id=ud714ae11&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=514&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20206&status=done&style=none&taskId=u72285494-e8ed-4978-876c-c5eeb61b7f1&title=&width=514" alt="image.png"><br>点击运行按钮，运行到设备<br>在设备上测试插件的功能是否有效</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>双击 gradle 下 对应模块 task 下 的 打包脚本<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660878971416-ae4442de-4c9b-4bd9-ac1f-38f444968d90.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=1050&id=u151f3402&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1050&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=280624&status=done&style=none&taskId=ua62f38f0-c794-4cb5-8e6f-692ac9acc5e&title=&width=1920" alt="image.png"><br>如果gradle中没有对应层级，说明 task 被折叠<br>点击 file 下的 setting，将对应项目 取消勾选，即可看到所有的 内容<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660879057353-d864bf50-6c68-4c16-bb30-bd4ef3118ba9.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=806&id=ub4a3f6f9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=806&originWidth=1336&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106783&status=done&style=none&taskId=u0d883673-b983-42fa-ad62-494402d402b&title=&width=1336" alt="image.png"></p><h3 id="打包自定义调试基座"><a href="#打包自定义调试基座" class="headerlink" title="打包自定义调试基座"></a>打包自定义调试基座</h3><h4 id="云打包"><a href="#云打包" class="headerlink" title="云打包"></a>云打包</h4><p>根据文档的对应格式，配置好插件，以及生成的 aar 文件<br><a href="https://nativesupport.dcloud.net.cn/NativePlugin/course/package">https://nativesupport.dcloud.net.cn/NativePlugin/course/package</a><br>在 HbuilderX 中的 运行中，选择 制作自定义调试基座<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660879271436-f8128cfd-5142-4be2-9939-2c80903e66e5.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=330&id=u27d0e829&margin=%5Bobject%20Object%5D&name=image.png&originHeight=330&originWidth=489&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34315&status=done&style=none&taskId=u4eb5a893-5cfe-4758-bd65-cd79c9970ff&title=&width=489" alt="image.png"><br>填写好对应信息后选择打包<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660879331890-b15d70da-acc4-4381-8814-55eccac45c9e.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=892&id=ubfe035a6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=892&originWidth=705&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31282&status=done&style=none&taskId=u55ee7919-eb3f-4102-9385-f68ea68648e&title=&width=705" alt="image.png"><br>等待云打包完毕后，在运行基座选中，选择自定义调试基座，后续运行中即可调用到对应插件方法</p><h4 id="本地打包"><a href="#本地打包" class="headerlink" title="本地打包"></a>本地打包</h4><p>可以在 android studio 中 点击 build 构建 apk<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660879136414-ecd03ef8-adf7-4792-80c9-9fd4ca719c70.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=427&id=ua908994f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=427&originWidth=868&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85658&status=done&style=none&taskId=u719c193b-e057-402e-b9b6-0fd8b1583c5&title=&width=868" alt="image.png"><br>生成的apk 会存放到 apk 的 build 目录下<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22526171/1660879173457-c76b2530-3d5f-4186-b7ec-15b08e0b6004.png#clientId=u461b8c8c-bac7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=275&id=u7368b800&margin=%5Bobject%20Object%5D&name=image.png&originHeight=275&originWidth=458&originalType=binary&ratio=1&rotation=0&showTitle=false&size=11784&status=done&style=none&taskId=u38a7dc38-25b3-4bd1-9046-690cb5c85af&title=&width=458" alt="image.png"><br>将该文件替换到 uniapp 项目下 unpackage 中的 对应的 apk 即可</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;uniapp 原生插件封装的过程及注意事项&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="uniapp" scheme="http://mxe23.cn/categories/uniapp/"/>
    
    
    <category term="vue" scheme="http://mxe23.cn/tags/vue/"/>
    
    <category term="uniapp" scheme="http://mxe23.cn/tags/uniapp/"/>
    
    <category term="android" scheme="http://mxe23.cn/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>promise 实现</title>
    <link href="http://mxe23.cn/2022/07/23/sourcecode/promise%E5%AE%9E%E7%8E%B0/"/>
    <id>http://mxe23.cn/2022/07/23/sourcecode/promise%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-07-22T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.611Z</updated>
    
    <content type="html"><![CDATA[<p>ES6 内置类 promise 的实现</p><span id="more"></span><blockquote><p>参考尚硅谷 promise 解析视频</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Promise</span> &#123;</span><br><span class="line">    <span class="comment">// promise 状态</span></span><br><span class="line">    <span class="title class_">PromiseState</span> = <span class="string">&#x27;pending&#x27;</span></span><br><span class="line">    <span class="comment">// promise 结果</span></span><br><span class="line">    <span class="title class_">PromiseResult</span> = <span class="literal">null</span></span><br><span class="line">    <span class="comment">// promise 回调函数列表</span></span><br><span class="line">    callback = []</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">executor</span>) &#123;</span><br><span class="line">        <span class="comment">// 成功的回调</span></span><br><span class="line">        <span class="comment">// 箭头函数避免 this 指向问题</span></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">resolve</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> !== <span class="string">&#x27;pending&#x27;</span>) <span class="keyword">return</span></span><br><span class="line">            <span class="comment">// 1. 修改 Promise 状态（promiseState）</span></span><br><span class="line">            <span class="comment">// 2. 设置对象结果值（promiseResult）</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">PromiseState</span> = <span class="string">&#x27;fulfilled&#x27;</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">PromiseResult</span> = data</span><br><span class="line">            <span class="comment">// 异步调用 then 方法</span></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 调用成功的回调函数</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">callback</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">                    item.<span class="title function_">onResolved</span>(data)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 失败的回调</span></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">reject</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> !== <span class="string">&#x27;pending&#x27;</span>) <span class="keyword">return</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">PromiseState</span> = <span class="string">&#x27;rejected&#x27;</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">PromiseResult</span> = data</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">callback</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">                    item.<span class="title function_">onRejected</span>(data)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 同步调用执行器函数</span></span><br><span class="line">            <span class="title function_">executor</span>(resolve, reject)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="comment">// 修改 promise 对象状态为 失败</span></span><br><span class="line">            <span class="title function_">reject</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">then</span>(<span class="params">onResolved, onRejected</span>) &#123;</span><br><span class="line">        <span class="comment">// onRejected 是否传递</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> onRejected !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            onRejected = <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> reason</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// onResolved 是否传递</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> onResolved !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            onResolved = <span class="function"><span class="params">value</span> =&gt;</span> value</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="title function_">callback</span> = (<span class="params">type</span>) =&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> result = <span class="title function_">type</span>(<span class="variable language_">this</span>.<span class="property">PromiseResult</span>)</span><br><span class="line">                    <span class="keyword">if</span> (result <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                        <span class="comment">// 是 Promise 类型</span></span><br><span class="line">                        result.<span class="title function_">then</span>(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                            <span class="title function_">resolve</span>(r)</span><br><span class="line">                        &#125;, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">                            <span class="title function_">reject</span>(e)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="title function_">resolve</span>(result)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(e)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用回调函数 PromiseState</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="string">&#x27;fulfilled&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 回调函数异步执行</span></span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">callback</span>(onResolved)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="string">&#x27;rejected&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">callback</span>(onRejected)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// pending 状态</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="string">&#x27;pending&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 保存回调函数</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">callback</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">onResolved</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="comment">// 执行成功的回调函数</span></span><br><span class="line">                        <span class="title function_">callback</span>(onResolved)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">onRejected</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="title function_">callback</span>(onRejected)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(onRejected) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">then</span>(<span class="literal">undefined</span>, onRejected)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">resolve</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                value.<span class="title function_">then</span>(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>(v)</span><br><span class="line">                &#125;, <span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(r)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>(value)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">reject</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">reject</span>(value)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">all</span>(<span class="params">promises</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">const</span> res = []</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; promises.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                promises[i].<span class="title function_">then</span>(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</span><br><span class="line">                    count++</span><br><span class="line">                    <span class="comment">// 可能成功的时间不一致</span></span><br><span class="line">                    <span class="comment">// 使用push可能导致结果与传入数组不一致</span></span><br><span class="line">                    res[i] = v</span><br><span class="line">                    <span class="comment">// 每个 promise 都成功</span></span><br><span class="line">                    <span class="keyword">if</span> (count === promises.<span class="property">length</span>) &#123;</span><br><span class="line">                        <span class="title function_">resolve</span>(res)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 只要有一个失败</span></span><br><span class="line">                    <span class="title function_">reject</span>(r)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">race</span>(<span class="params">promises</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; promises.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                promises[i].<span class="title function_">then</span>(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>(v)</span><br><span class="line">                &#125;, <span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(r)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ES6 内置类 promise 的实现&lt;/p&gt;</summary>
    
    
    
    <category term="javascript" scheme="http://mxe23.cn/categories/javascript/"/>
    
    
    <category term="方法实现" scheme="http://mxe23.cn/tags/%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>underscore源码解析，filter</title>
    <link href="http://mxe23.cn/2022/07/04/underscore/05filter/"/>
    <id>http://mxe23.cn/2022/07/04/underscore/05filter/</id>
    <published>2022-07-03T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h1><p><code>_.filter(list, predicate, [context])</code>Alias: <strong>select</strong><br>遍历 <strong>list</strong> 中的每个值，返回所有通过 <strong>predicate</strong> 真值检测的元素所组成的数组。<strong>predicate</strong> 通过 <a href="https://www.underscorejs.com.cn/filter#iteratee"><strong>iteratee</strong></a> 进行转换，以简化速记语法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> evens = _.<span class="title function_">filter</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], <span class="keyword">function</span>(<span class="params">num</span>)&#123; <span class="keyword">return</span> num % <span class="number">2</span> == <span class="number">0</span>; &#125;);</span><br><span class="line">=&gt; [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure><h2 id="filter-js"><a href="#filter-js" class="headerlink" title="filter.js"></a>filter.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cb <span class="keyword">from</span> <span class="string">&#x27;./_cb.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> each <span class="keyword">from</span> <span class="string">&#x27;./each.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回通过真值测试的所有元素</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">filter</span>(<span class="params">obj, predicate, context</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> results = [];</span><br><span class="line">    <span class="comment">// 改变this指向</span></span><br><span class="line">    predicate = <span class="title function_">cb</span>(predicate, context);</span><br><span class="line">    <span class="comment">// each 循环可迭代对象的每一项，将结果push进数组</span></span><br><span class="line">    <span class="title function_">each</span>(obj, <span class="keyword">function</span>(<span class="params">value, index, list</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">predicate</span>(value, index, list)) results.<span class="title function_">push</span>(value);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;filter&quot;&gt;&lt;a href=&quot;#filter&quot; class=&quot;headerlink&quot; title=&quot;filter&quot;&gt;&lt;/a&gt;filter&lt;/h1&gt;&lt;p&gt;&lt;code&gt;_.filter(list, predicate, [context])&lt;/code&gt;Alias</summary>
      
    
    
    
    <category term="underscore" scheme="http://mxe23.cn/categories/underscore/"/>
    
    
    <category term="源码解析" scheme="http://mxe23.cn/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>underscore源码解析，find</title>
    <link href="http://mxe23.cn/2022/07/03/underscore/04find/"/>
    <id>http://mxe23.cn/2022/07/03/underscore/04find/</id>
    <published>2022-07-02T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="find"><a href="#find" class="headerlink" title="find"></a>find</h1><p><code>_.find(list, predicate, [context])</code>Alias: <strong>detect</strong><br>在 <strong>list</strong> 中逐项查找，返回第一个通过 <strong>predicate</strong> 迭代函数真值检测的元素值，如果没有元素通过检测则返回 <code>undefined</code>。 如果找到匹配的元素，函数将立即返回，不会遍历整个 list。<strong>predicate</strong> 通过 <a href="https://www.underscorejs.com.cn/find#iteratee"><strong>iteratee</strong></a> 进行转换，以简化速记语法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> even = _.<span class="title function_">find</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], <span class="keyword">function</span>(<span class="params">num</span>)&#123; <span class="keyword">return</span> num % <span class="number">2</span> == <span class="number">0</span>; &#125;);</span><br><span class="line">=&gt; <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="find-js"><a href="#find-js" class="headerlink" title="find.js"></a>find.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> isArrayLike <span class="keyword">from</span> <span class="string">&#x27;./_isArrayLike.js&#x27;</span>;</span><br><span class="line"><span class="comment">// 是否类数组，在01 each 中有展示</span></span><br><span class="line"><span class="keyword">import</span> findIndex <span class="keyword">from</span> <span class="string">&#x27;./findIndex.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> findKey <span class="keyword">from</span> <span class="string">&#x27;./findKey.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回第一个匹配的结果</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">find</span>(<span class="params">obj, predicate, context</span>) &#123;</span><br><span class="line">  <span class="comment">// 是否是类数组，是数组查索引（下标），不是查键名</span></span><br><span class="line">  <span class="keyword">var</span> keyFinder = <span class="title function_">isArrayLike</span>(obj) ? findIndex : findKey;</span><br><span class="line">  <span class="comment">// 查询的结果</span></span><br><span class="line">  <span class="keyword">var</span> key = <span class="title function_">keyFinder</span>(obj, predicate, context);</span><br><span class="line">  <span class="keyword">if</span> (key !== <span class="keyword">void</span> <span class="number">0</span> &amp;&amp; key !== -<span class="number">1</span>) <span class="keyword">return</span> obj[key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="findIndex-js"><a href="#findIndex-js" class="headerlink" title="findIndex.js"></a>findIndex.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createPredicateIndexFinder <span class="keyword">from</span> <span class="string">&#x27;./_createPredicateIndexFinder.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回判断结果为真的第一个索引</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createPredicateIndexFinder</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="createPredicateIndexFinder-js"><a href="#createPredicateIndexFinder-js" class="headerlink" title="_createPredicateIndexFinder.js"></a>_createPredicateIndexFinder.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cb <span class="keyword">from</span> <span class="string">&#x27;./_cb.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> getLength <span class="keyword">from</span> <span class="string">&#x27;./_getLength.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据传入的方向，生成 findIndex 和 findLastIndex（从前面开始查，还是后面开始查）</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">createPredicateIndexFinder</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">    <span class="comment">// 传入数组，条件函数，上下文</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">array, predicate, context</span>) &#123;</span><br><span class="line">         <span class="comment">// 把条件函数的 this 指向当前上下文</span></span><br><span class="line">        predicate = <span class="title function_">cb</span>(predicate, context);</span><br><span class="line">        <span class="keyword">var</span> length = <span class="title function_">getLength</span>(array);</span><br><span class="line">        <span class="comment">// 起始索引</span></span><br><span class="line">        <span class="keyword">var</span> index = dir &gt; <span class="number">0</span> ? <span class="number">0</span> : length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; index &gt;= <span class="number">0</span> &amp;&amp; index &lt; length; index += dir) &#123;</span><br><span class="line">            <span class="comment">// 执行条件函数，传入数组的当前项，索引，以及数组本身</span></span><br><span class="line">            <span class="comment">// 如果结果为真，返回当前索引</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">predicate</span>(array[index], index, array)) <span class="keyword">return</span> index;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 没有符合条件的返回 -1</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="findKey-js"><a href="#findKey-js" class="headerlink" title="findKey.js"></a>findKey.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cb <span class="keyword">from</span> <span class="string">&#x27;./_cb.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> keys <span class="keyword">from</span> <span class="string">&#x27;./keys.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回通过真值测试的第一个键名</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">findKey</span>(<span class="params">obj, predicate, context</span>) &#123;</span><br><span class="line">    <span class="comment">// 把条件函数的 this 指向当前上下文</span></span><br><span class="line">    predicate = <span class="title function_">cb</span>(predicate, context);</span><br><span class="line">    <span class="comment">// Object.keys() 的向下兼容版本</span></span><br><span class="line">    <span class="keyword">var</span> _keys = <span class="title function_">keys</span>(obj), key;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, length = _keys.<span class="property">length</span>; i &lt; length; i++) &#123;</span><br><span class="line">        key = _keys[i];</span><br><span class="line">        <span class="comment">// 返回符合条件的索引</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">predicate</span>(obj[key], key, obj)) <span class="keyword">return</span> key;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;find&quot;&gt;&lt;a href=&quot;#find&quot; class=&quot;headerlink&quot; title=&quot;find&quot;&gt;&lt;/a&gt;find&lt;/h1&gt;&lt;p&gt;&lt;code&gt;_.find(list, predicate, [context])&lt;/code&gt;Alias: &lt;strong&gt;</summary>
      
    
    
    
    <category term="underscore" scheme="http://mxe23.cn/categories/underscore/"/>
    
    
    <category term="源码解析" scheme="http://mxe23.cn/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>underscore源码解析，_map</title>
    <link href="http://mxe23.cn/2022/06/23/underscore/02map/"/>
    <id>http://mxe23.cn/2022/06/23/underscore/02map/</id>
    <published>2022-06-22T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><p><code>_.map(list, iteratee, [context])</code>Alias: <strong>collect</strong><br>通过对 <strong>list</strong> 里的每个元素调用转换函数(<a href="https://www.underscorejs.com.cn/map#iteratee"><strong>iteratee</strong> </a>迭代器)生成一个与之相对应的数组。<code>iteratee </code>传递三个参数：<code>value</code>，然后是迭代 <code>index</code>(或 <code>key</code> 注：如果 <strong>list</strong> 是个 JavaScript 对象是，这个参数就是<code> key</code>)，最后一个是引用指向整个<code> list</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">_.<span class="title function_">map</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="keyword">function</span>(<span class="params">num</span>)&#123; <span class="keyword">return</span> num * <span class="number">3</span>; &#125;);</span><br><span class="line">=&gt; [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]</span><br><span class="line">_.<span class="title function_">map</span>(&#123;<span class="attr">one</span>: <span class="number">1</span>, <span class="attr">two</span>: <span class="number">2</span>, <span class="attr">three</span>: <span class="number">3</span>&#125;, <span class="keyword">function</span>(<span class="params">num, key</span>)&#123; <span class="keyword">return</span> num * <span class="number">3</span>; &#125;);</span><br><span class="line">=&gt; [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]</span><br><span class="line">_.<span class="title function_">map</span>([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]], _.<span class="property">first</span>);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cb <span class="keyword">from</span> <span class="string">&#x27;./_cb.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> isArrayLike <span class="keyword">from</span> <span class="string">&#x27;./_isArrayLike.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> keys <span class="keyword">from</span> <span class="string">&#x27;./keys.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 整体实现思路与 each 差不多，只不过会把每次迭代的结果作为新数组的项返回出去.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">map</span>(<span class="params">obj, iteratee, context</span>) &#123;</span><br><span class="line">  iteratee = <span class="title function_">cb</span>(iteratee, context);</span><br><span class="line">  <span class="keyword">var</span> _keys = !<span class="title function_">isArrayLike</span>(obj) &amp;&amp; <span class="title function_">keys</span>(obj),</span><br><span class="line">      length = (_keys || obj).<span class="property">length</span>,</span><br><span class="line">      results = <span class="title class_">Array</span>(length);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> index = <span class="number">0</span>; index &lt; length; index++) &#123;</span><br><span class="line">    <span class="keyword">var</span> currentKey = _keys ? _keys[index] : index;</span><br><span class="line">    results[index] = <span class="title function_">iteratee</span>(obj[currentKey], currentKey, obj);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;map&quot;&gt;&lt;a href=&quot;#map&quot; class=&quot;headerlink&quot; title=&quot;map&quot;&gt;&lt;/a&gt;map&lt;/h1&gt;&lt;p&gt;&lt;code&gt;_.map(list, iteratee, [context])&lt;/code&gt;Alias: &lt;strong&gt;collec</summary>
      
    
    
    
    <category term="underscore" scheme="http://mxe23.cn/categories/underscore/"/>
    
    
    <category term="源码解析" scheme="http://mxe23.cn/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>underscore源码解析，reduce</title>
    <link href="http://mxe23.cn/2022/06/23/underscore/03reduce/"/>
    <id>http://mxe23.cn/2022/06/23/underscore/03reduce/</id>
    <published>2022-06-22T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h1><p><code>_.reduce(list, iteratee, [memo], [context])</code>Aliases: <strong>inject</strong>, <strong>foldl</strong><br>别名为 <strong>inject</strong> 和 <strong>foldl</strong>, <strong>reduce</strong> 方法把 <strong>list</strong> 中元素归结为一个单独的数值。<strong>Memo</strong> 是 reduce 函数的初始值，会被每一次成功调用 <strong>iteratee</strong> 函数的返回值所取代 。这个迭代传递4个参数：<code>memo</code>,<code>value</code> 和 迭代的<code> index</code>（或者 key）和最后一个引用的整个 <code>list</code>。</p><p>如果没有 <strong>memo</strong> 传递给 <strong>reduce</strong> 的初始调用，<strong>iteratee</strong> 不会被列表中的第一个元素调用。第一个元素将取代 <strong>memo</strong> 参数传递给列表中下一个元素调用的 <strong>iteratee</strong> 函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = _.<span class="title function_">reduce</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="keyword">function</span>(<span class="params">memo, num</span>)&#123; <span class="keyword">return</span> memo + num; &#125;, <span class="number">0</span>);</span><br><span class="line">=&gt; <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="reduce-js"><a href="#reduce-js" class="headerlink" title="reduce.js"></a>reduce.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createReduce <span class="keyword">from</span> <span class="string">&#x27;./_createReduce.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从一组值中构建出一个结果</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createReduce</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="createReduce-js"><a href="#createReduce-js" class="headerlink" title="_createReduce.js"></a>_createReduce.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> isArrayLike <span class="keyword">from</span> <span class="string">&#x27;./_isArrayLike.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> keys <span class="keyword">from</span> <span class="string">&#x27;./keys.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> optimizeCb <span class="keyword">from</span> <span class="string">&#x27;./_optimizeCb.js&#x27;</span>;</span><br><span class="line"><span class="comment">// 引入方法理解见 01 each</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  创建 reducing 函数的 内部方法, 向左或向右迭代.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">createReduce</span>(<span class="params">dir</span>) &#123;</span><br><span class="line"><span class="comment">// 函数内部重新分配参数变量</span></span><br><span class="line">  <span class="keyword">var</span> reducer = <span class="keyword">function</span>(<span class="params">obj, iteratee, memo, initial</span>) &#123;</span><br><span class="line">    <span class="comment">// 不是数组类数组，取对象键的集合</span></span><br><span class="line">     <span class="keyword">var</span> _keys = !<span class="title function_">isArrayLike</span>(obj) &amp;&amp; <span class="title function_">keys</span>(obj),</span><br><span class="line">        <span class="comment">// object键集合的长度,或数组类数组的length属性</span></span><br><span class="line">        length = (_keys || obj).<span class="property">length</span>,</span><br><span class="line">        <span class="comment">// dir &gt; 0 向右，&lt;= 0 向左</span></span><br><span class="line">        index = dir &gt; <span class="number">0</span> ? <span class="number">0</span> : length - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 当没有初始化的元素传入，memo就是每一项的结算结果</span></span><br><span class="line">    <span class="keyword">if</span> (!initial) &#123;</span><br><span class="line">      memo = obj[_keys ? _keys[index] : index];</span><br><span class="line">      index += dir;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 起始项到当前项</span></span><br><span class="line">    <span class="keyword">for</span> (; index &gt;= <span class="number">0</span> &amp;&amp; index &lt; length; index += dir) &#123;</span><br><span class="line">      <span class="keyword">var</span> currentKey = _keys ? _keys[index] : index;</span><br><span class="line">      <span class="comment">//  当前项 和 前一次计算的结果作为新的 迭代器的参数，计算的结果等于 memo 的值</span></span><br><span class="line">      memo = <span class="title function_">iteratee</span>(memo, obj[currentKey], currentKey, obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> memo;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 接受参数，迭代元素，迭代器，初始化的元素，上下文</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">obj, iteratee, memo, context</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果参数大于等于3，后面的参数作为计算的起始项</span></span><br><span class="line">    <span class="keyword">var</span> initial = <span class="variable language_">arguments</span>.<span class="property">length</span> &gt;= <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reducer</span>(obj, <span class="title function_">optimizeCb</span>(iteratee, context, <span class="number">4</span>), memo, initial);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="optimizeCb-js"><a href="#optimizeCb-js" class="headerlink" title="_optimizeCb.js"></a>_optimizeCb.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里主要用到了 argCount = 4 的情况</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">accumulator, value, index, collection</span>) &#123;</span><br><span class="line">    <span class="comment">// 改变 this 指向，依次传入，累计计算结果，当前值，当前索引，迭代的集合</span></span><br><span class="line">    <span class="keyword">return</span> func.<span class="title function_">call</span>(context, accumulator, value, index, collection);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组reduce方法实现"><a href="#数组reduce方法实现" class="headerlink" title="数组reduce方法实现"></a>数组reduce方法实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">reduce</span>(<span class="params">arr,fn,initVal</span>) &#123;   </span><br><span class="line">    <span class="keyword">let</span> initIndex</span><br><span class="line">    <span class="keyword">let</span> acc</span><br><span class="line">    initIndex = <span class="variable language_">arguments</span>.<span class="property">length</span> === <span class="number">3</span> ? <span class="number">1</span> : <span class="number">0</span></span><br><span class="line">    acc = <span class="variable language_">arguments</span>.<span class="property">length</span> === <span class="number">3</span> ? initVal : arr[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> initIndex; i &lt; arr.<span class="property">length</span>; i++ ) &#123;</span><br><span class="line">        acc = <span class="title function_">fn</span>(acc, arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> acc</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ReduceRight"><a href="#ReduceRight" class="headerlink" title="ReduceRight"></a>ReduceRight</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createReduce <span class="keyword">from</span> <span class="string">&#x27;./_createReduce.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从右侧开始的 reduce</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createReduce</span>(-<span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;reduce&quot;&gt;&lt;a href=&quot;#reduce&quot; class=&quot;headerlink&quot; title=&quot;reduce&quot;&gt;&lt;/a&gt;reduce&lt;/h1&gt;&lt;p&gt;&lt;code&gt;_.reduce(list, iteratee, [memo], [context])&lt;/cod</summary>
      
    
    
    
    <category term="underscore" scheme="http://mxe23.cn/categories/underscore/"/>
    
    
    <category term="源码解析" scheme="http://mxe23.cn/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>underscore源码解析，_each</title>
    <link href="http://mxe23.cn/2022/06/22/underscore/01each/"/>
    <id>http://mxe23.cn/2022/06/22/underscore/01each/</id>
    <published>2022-06-21T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="each"><a href="#each" class="headerlink" title="each"></a>each</h1><p><code>_.each(list, iteratee, [context])</code>Alias: <strong>forEach</strong><br>遍历 <strong>list</strong> 中的所有元素，按顺序用每个元素当做参数调用 <strong>iteratee</strong> 函数。如果传递了 <strong>context</strong> 参数，则把 <strong>iteratee</strong> 绑定到 <strong>context</strong> 对象上。每次调用 <strong>iteratee</strong> 都会传递三个参数：<code>(element, index, list)</code>。如果 <strong>list</strong> 是个 JavaScript 对象，<strong>iteratee</strong> 的参数是 <code>(value, key, list)</code>)。返回 <strong>list</strong> 以方便链式调用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">_.<span class="title function_">each</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], alert);</span><br><span class="line">=&gt; alerts each number <span class="keyword">in</span> turn...</span><br><span class="line">_.<span class="title function_">each</span>(&#123;<span class="attr">one</span>: <span class="number">1</span>, <span class="attr">two</span>: <span class="number">2</span>, <span class="attr">three</span>: <span class="number">3</span>&#125;, alert);</span><br><span class="line">=&gt; alerts each number value <span class="keyword">in</span> turn..</span><br></pre></td></tr></table></figure><p><em>注意：集合函数能在数组，对象，和类数组对象，比如</em><code> arguments</code>, <code>NodeList </code><em>和类似的数据类型上正常工作。 但是它通过<a href="http://zh.wikipedia.org/zh-cn/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B">鸭子类型</a>工作，所以要避免传递带有一个数值类型 <code>length</code> 属性的对象。每个循环不能被破坏 - 打破， 使用</em><em>_.find</em>* 代替，这也是很好的注意。*</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> optimizeCb <span class="keyword">from</span> <span class="string">&#x27;./_optimizeCb.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> isArrayLike <span class="keyword">from</span> <span class="string">&#x27;./_isArrayLike.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> keys <span class="keyword">from</span> <span class="string">&#x27;./keys.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">each</span>(<span class="params">obj, iteratee, context</span>) &#123;</span><br><span class="line">  <span class="comment">// 生成对应函数的迭代器</span></span><br><span class="line">  iteratee = <span class="title function_">optimizeCb</span>(iteratee, context);</span><br><span class="line">  <span class="keyword">var</span> i, length;</span><br><span class="line">  <span class="comment">// 是数组或类数组</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">isArrayLike</span>(obj)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, length = obj.<span class="property">length</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="title function_">iteratee</span>(obj[i], i, obj);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 是 object</span></span><br><span class="line">    <span class="keyword">var</span> _keys = <span class="title function_">keys</span>(obj);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, length = _keys.<span class="property">length</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="title function_">iteratee</span>(obj[_keys[i]], _keys[i], obj);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h2><h3 id="optimizeCb"><a href="#optimizeCb" class="headerlink" title="optimizeCb"></a>optimizeCb</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回一个当前引擎版本有效的内部函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">optimizeCb</span>(<span class="params">func, context, argCount</span>) &#123;</span><br><span class="line">  <span class="comment">// 上下文为空，直接返回原函数</span></span><br><span class="line">  <span class="keyword">if</span> (context === <span class="keyword">void</span> <span class="number">0</span>) <span class="keyword">return</span> func;</span><br><span class="line">  <span class="comment">// 如果没有传递参数个数，默认为 3 个</span></span><br><span class="line">  <span class="keyword">switch</span> (argCount == <span class="literal">null</span> ? <span class="number">3</span> : argCount) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> func.<span class="title function_">call</span>(context, value);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 省略了使用两个参数的情况，因为没有用到.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">value, index, collection</span>) &#123;</span><br><span class="line">      <span class="comment">// this 指向 context,传入当前值，索引，以及集合</span></span><br><span class="line">      <span class="keyword">return</span> func.<span class="title function_">call</span>(context, value, index, collection);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">accumulator, value, index, collection</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> func.<span class="title function_">call</span>(context, accumulator, value, index, collection);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> func.<span class="title function_">apply</span>(context, <span class="variable language_">arguments</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="IsArrayLike"><a href="#IsArrayLike" class="headerlink" title="IsArrayLike"></a>IsArrayLike</h3><h4 id="isArrayLike-js"><a href="#isArrayLike-js" class="headerlink" title="_isArrayLike.js"></a>_isArrayLike.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createSizePropertyCheck <span class="keyword">from</span> <span class="string">&#x27;./_createSizePropertyCheck.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> getLength <span class="keyword">from</span> <span class="string">&#x27;./_getLength.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确定是否为一个集合（数组或类数组）</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createSizePropertyCheck</span>(getLength);</span><br></pre></td></tr></table></figure><h4 id="createSizePropertyCheck-js"><a href="#createSizePropertyCheck-js" class="headerlink" title="_createSizePropertyCheck.js"></a>_createSizePropertyCheck.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js 可以精确表示的最大整数</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">MAX_ARRAY_INDEX</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./_setup.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// `isArrayLike` 和 `isBufferLike` 的 内部逻辑</span></span><br><span class="line"><span class="comment">// 传入获取长度的方法</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">createSizePropertyCheck</span>(<span class="params">getSizeProperty</span>) &#123;</span><br><span class="line">  <span class="comment">// 返回一个函数，传入一个集合</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">collection</span>) &#123;</span><br><span class="line">    <span class="comment">// 对集合取长度</span></span><br><span class="line">    <span class="keyword">var</span> sizeProperty = <span class="title function_">getSizeProperty</span>(collection);</span><br><span class="line">    <span class="comment">// 如果长度是 number 同时在有效范围内，表示是一个合法的集合（数组或类数组）</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> sizeProperty == <span class="string">&#x27;number&#x27;</span> &amp;&amp; sizeProperty &gt;= <span class="number">0</span> &amp;&amp; sizeProperty &lt;= <span class="variable constant_">MAX_ARRAY_INDEX</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="getLength-js"><a href="#getLength-js" class="headerlink" title="_getLength.js"></a>_getLength.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shallowProperty <span class="keyword">from</span> <span class="string">&#x27;./_shallowProperty.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取对象 `length` 属性的 内部方法.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">shallowProperty</span>(<span class="string">&#x27;length&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="shadowProperty-js"><a href="#shadowProperty-js" class="headerlink" title="_shadowProperty.js"></a>_shadowProperty.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成一个从 obj 中获取 对应key 的内部函数.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">shallowProperty</span>(<span class="params">key</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> obj == <span class="literal">null</span> ? <span class="keyword">void</span> <span class="number">0</span> : obj[key];</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> isObject <span class="keyword">from</span> <span class="string">&#x27;./isObject.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; nativeKeys, hasEnumBug &#125; <span class="keyword">from</span> <span class="string">&#x27;./_setup.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> has <span class="keyword">from</span> <span class="string">&#x27;./_has.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> collectNonEnumProps <span class="keyword">from</span> <span class="string">&#x27;./_collectNonEnumProps.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieve the names of an object&#x27;s own properties.</span></span><br><span class="line"><span class="comment">// Delegates to **ECMAScript 5**&#x27;s native `Object.keys`.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">keys</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="comment">// 不是对象抛出空数组</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">isObject</span>(obj)) <span class="keyword">return</span> [];</span><br><span class="line">  <span class="comment">// 存在 keys 方法  返回 Object.keys 结果</span></span><br><span class="line">  <span class="keyword">if</span> (nativeKeys) <span class="keyword">return</span> <span class="title function_">nativeKeys</span>(obj);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 以上条件都不满足，使用 for in 遍历</span></span><br><span class="line">  <span class="keyword">var</span> keys = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) <span class="keyword">if</span> (<span class="title function_">has</span>(obj, key)) keys.<span class="title function_">push</span>(key);</span><br><span class="line">  <span class="comment">// 是否小于 IE9.</span></span><br><span class="line">  <span class="keyword">if</span> (hasEnumBug) <span class="title function_">collectNonEnumProps</span>(obj, keys);</span><br><span class="line">  <span class="keyword">return</span> keys;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;each&quot;&gt;&lt;a href=&quot;#each&quot; class=&quot;headerlink&quot; title=&quot;each&quot;&gt;&lt;/a&gt;each&lt;/h1&gt;&lt;p&gt;&lt;code&gt;_.each(list, iteratee, [context])&lt;/code&gt;Alias: &lt;strong&gt;f</summary>
      
    
    
    
    <category term="underscore" scheme="http://mxe23.cn/categories/underscore/"/>
    
    
    <category term="源码解析" scheme="http://mxe23.cn/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>windows 搭建 kodbox 私人云盘</title>
    <link href="http://mxe23.cn/2022/04/29/Share/Kodbox%E7%A7%81%E4%BA%BA%E4%BA%91%E7%9B%98/"/>
    <id>http://mxe23.cn/2022/04/29/Share/Kodbox%E7%A7%81%E4%BA%BA%E4%BA%91%E7%9B%98/</id>
    <published>2022-04-28T16:00:00.000Z</published>
    <updated>2024-09-03T17:26:26.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载可道云服务器端"><a href="#下载可道云服务器端" class="headerlink" title="下载可道云服务器端"></a>下载可道云服务器端</h3><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429162036113.png" alt="image-20220429162036113"></p><p><a href="https://kodcloud.com/download/">下载 - 可道云-私有云存储&amp;协同办公平台_企业网盘_企业云盘_网盘_云盘 (kodcloud.com)</a></p><h3 id="下载phpStudy"><a href="#下载phpStudy" class="headerlink" title="下载phpStudy"></a>下载phpStudy</h3><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429162143463.png" alt="image-20220429162143463"></p><p><a href="https://www.xp.cn/">小皮面板(phpstudy) - 让天下没有难配的服务器环境！ (xp.cn)</a></p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>打开phpstudy面板，选择软件管理</p><p>搭建kodbox需要使用 <strong>php + MySQL + Nginx + Redis</strong> 查看是否有未安装的软件，点击安装</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429162411968.png" alt="image-20220429162411968"></p><h3 id="配置软件"><a href="#配置软件" class="headerlink" title="配置软件"></a>配置软件</h3><p>点击php的设置，在扩展组件中打开redis插件</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429162623088.png" alt="image-20220429162623088"></p><p>配置数据库密码</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429163033522.C" alt="image-20220429163033522"></p><p>配置nginx</p><p>将下载好的kodbox 服务端解压到搭建的位置，同时打开nginx配置，配置网站的目录以及启动端口</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429163139221.png" alt="image-20220429163139221"></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429163335936.png" alt="image-20220429163335936"></p><h3 id="KodBox配置"><a href="#KodBox配置" class="headerlink" title="KodBox配置"></a>KodBox配置</h3><p>在浏览器中打开 localhost: + 配置的nginx端口</p><p>如果有配置有问题，注意检查问题项</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429163821067.png" alt="image-20220429163821067"></p><p>点击下一步</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429164107890.png" alt="image-20220429164107890"></p><p>设置管理员密码，点击确定即可</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429164151270.png" alt="image-20220429164151270"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>登录账号</p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429164242000.png" alt="image-20220429164242000"></p><p><img src="https://cdn.jsdelivr.net/gh/mxe23/pic.repository/blog/image-20220429164301434.png" alt="image-20220429164301434"></p><p>app可直接在官网下载，根据提示连接即可</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="mysql-冲突"><a href="#mysql-冲突" class="headerlink" title="mysql 冲突"></a>mysql 冲突</h3><p>如果本机以前安装过mySQL ，phpStudy中的mySQL有可能会启动不起来服务</p><p>可以尝试更换端口，如果还是无效可以尝试关闭或删除原有的mysql服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc delete 服务名</span><br><span class="line">sc stop 服务名</span><br></pre></td></tr></table></figure><h3 id="移动端连接不稳定"><a href="#移动端连接不稳定" class="headerlink" title="移动端连接不稳定"></a>移动端连接不稳定</h3><p>lock action timeout 移动端或PC端偶尔会报这个错</p><p>读写冲突导致的文件锁</p><p>使用默认的文件缓存容易产生</p><p>按照上文使用 mysql + redis 基本不会产生</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;h3 id=&quot;下载可道云服务器端&quot;&gt;&lt;a href=&quot;#下载可道云服务器端&quot; class=&quot;headerlink&quot; title=&quot;下载可道云服务</summary>
      
    
    
    
    <category term="分享文章" scheme="http://mxe23.cn/categories/%E5%88%86%E4%BA%AB%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="技术分享" scheme="http://mxe23.cn/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>JS算法学习（二分查找）</title>
    <link href="http://mxe23.cn/2022/03/24/arithmetic/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    <id>http://mxe23.cn/2022/03/24/arithmetic/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</id>
    <published>2022-03-23T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.623Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>算法（第四版）读书笔记</p><p>使用JavaScript实现二分查找</p><span id="more"></span></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从给定数组中查找出指定元素的索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCurrentIndex</span>(<span class="params">arr,current</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> newArr = [...arr]</span><br><span class="line">    <span class="comment">// 1.数组需要有序</span></span><br><span class="line">    newArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span> a-b)</span><br><span class="line">    <span class="comment">// 当前的索引</span></span><br><span class="line">    <span class="keyword">let</span> cIndex = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 区间的结束索引</span></span><br><span class="line">    <span class="keyword">let</span> endIndex = newArr.<span class="property">length</span> - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(cIndex &lt;= endIndex) &#123;</span><br><span class="line">        <span class="keyword">let</span> middleIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>((cIndex + endIndex) / <span class="number">2</span>)</span><br><span class="line">        <span class="comment">// 如果目标值比中间值小，那就在左侧</span></span><br><span class="line">        <span class="keyword">if</span>(current &lt; newArr[middleIndex]) &#123;</span><br><span class="line">            endIndex = middleIndex - <span class="number">1</span></span><br><span class="line">        <span class="comment">// 如果目标值比中间值大，那就在右侧</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(current &gt; newArr[middleIndex]) &#123;</span><br><span class="line">            cIndex = middleIndex + <span class="number">1</span></span><br><span class="line">        <span class="comment">// 如果相等，中间位置就是目标索引</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> middleIndex</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果到最后也没有找到，说明数组中不包含该元素</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getCurrentIndex</span>(arr,<span class="number">5</span>) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;算法（第四版）读书笔记&lt;/p&gt;
&lt;p&gt;使用JavaScript实现二分查找&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法" scheme="http://mxe23.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="javascript" scheme="http://mxe23.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>uniapp开发常用库以及使用</title>
    <link href="http://mxe23.cn/2022/03/23/uniapp/uniapp%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%BA%93%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://mxe23.cn/2022/03/23/uniapp/uniapp%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%BA%93%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2022-03-22T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.604Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些个人在uniapp 开发中常用的库</p><span id="more"></span></blockquote><h2 id="请求库"><a href="#请求库" class="headerlink" title="请求库"></a>请求库</h2><p><a href="https://www.quanzhan.co/luch-request/">luch-request (quanzhan.co)</a></p><p>基于Promise开发的uni-app跨平台请求库</p><h2 id="UI框架"><a href="#UI框架" class="headerlink" title="UI框架"></a>UI框架</h2><p><a href="https://www.uviewui.com/">uView 2.0</a></p><p>1.0 版与 2.0 不兼容</p><p>支持uniapp的一个比较完备的ui框架<br>深度使用后不推荐，一些组件封装比较浅层，需要额外封装，或封装的不好，增加额外心智负担，并且引入必须完整引入<br>2.0 甚至移除了一些 1.0 中已有的功能</p><p><a href="https://ext.dcloud.net.cn/plugin?id=55">uni-ui</a></p><p>Dcloud官方维护的ui组件集合，官方背书，稳定更新<br>兼容性有保证，每个组件都可支持单独引用，一定程度上减少打包体积</p><h2 id="图表组件"><a href="#图表组件" class="headerlink" title="图表组件"></a>图表组件</h2><p><a href="https://www.ucharts.cn/">uCharts</a></p><p>uniapp 移动端支持比较友好的图表组件</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一些个人在uniapp 开发中常用的库&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="uniapp" scheme="http://mxe23.cn/categories/uniapp/"/>
    
    
    <category term="vue" scheme="http://mxe23.cn/tags/vue/"/>
    
    <category term="uniapp" scheme="http://mxe23.cn/tags/uniapp/"/>
    
  </entry>
  
  <entry>
    <title>小程序登录以及获取用户openID</title>
    <link href="http://mxe23.cn/2022/03/06/wechat-mini/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7openID/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96appId/"/>
    <id>http://mxe23.cn/2022/03/06/wechat-mini/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7openID/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96appId/</id>
    <published>2022-03-05T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.604Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>小程序登录流程以及获取用户信息的步骤</p></blockquote><span id="more"></span><h2 id="1-获取临时登录凭证"><a href="#1-获取临时登录凭证" class="headerlink" title="1. 获取临时登录凭证"></a>1. 获取临时登录凭证</h2><p>前端调用 wx.login 获取 code，通过 code 在后端换取 openId 等信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">  success (res) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; code &#125; = res</span><br><span class="line">    <span class="comment">// code 为 临时登录凭证，有效期为 5 分钟</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="2-后端调用-微信-登录接口"><a href="#2-后端调用-微信-登录接口" class="headerlink" title="2. 后端调用 微信 登录接口"></a>2. 后端调用 微信 登录接口</h2><h3 id="接口地址"><a href="#接口地址" class="headerlink" title="接口地址"></a>接口地址</h3><p>请求方式：GET</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code</span><br></pre></td></tr></table></figure><h3 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h3><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">默认值</th><th align="left">必填</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">appid</td><td align="left">string</td><td align="left"></td><td align="left">是</td><td align="left">小程序 appId</td></tr><tr><td align="left">secret</td><td align="left">string</td><td align="left"></td><td align="left">是</td><td align="left">小程序 appSecret</td></tr><tr><td align="left">js_code</td><td align="left">string</td><td align="left"></td><td align="left">是</td><td align="left">登录时获取的 code</td></tr><tr><td align="left">grant_type</td><td align="left">string</td><td align="left"></td><td align="left">是</td><td align="left">授权类型，此处只需填写 authorization_code</td></tr></tbody></table><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>返回的 JSON 数据包</p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">openid</td><td align="left">string</td><td align="left">用户唯一标识</td></tr><tr><td align="left">session_key</td><td align="left">string</td><td align="left">会话密钥</td></tr><tr><td align="left">unionid</td><td align="left">string</td><td align="left">用户在开放平台的唯一标识符，若当前小程序已绑定到微信开放平台帐号下会返回，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/union-id.html">UnionID 机制说明</a>。</td></tr><tr><td align="left">errcode</td><td align="left">number</td><td align="left">错误码</td></tr><tr><td align="left">errmsg</td><td align="left">string</td><td align="left">错误信息</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;小程序登录流程以及获取用户信息的步骤&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="微信小程序" scheme="http://mxe23.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="wechat" scheme="http://mxe23.cn/tags/wechat/"/>
    
    <category term="js" scheme="http://mxe23.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 搭建博客</title>
    <link href="http://mxe23.cn/2022/02/21/Share/hexo/"/>
    <id>http://mxe23.cn/2022/02/21/Share/hexo/</id>
    <published>2022-02-20T16:00:00.000Z</published>
    <updated>2024-09-03T17:34:55.613Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下 hexo 搭建个人博客 以及 绑定 github 绑定域名的整体流程</p></blockquote><span id="more"></span><h1 id="hexo-搭建博客"><a href="#hexo-搭建博客" class="headerlink" title="hexo 搭建博客"></a>hexo 搭建博客</h1><p><a href="https://hexo.io/zh-cn/index.html">Hexo</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>首次使用 git 时，需要设置用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br></pre></td></tr></table></figure><p>生成 ssh-key </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;email&quot;</span></span><br></pre></td></tr></table></figure><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p>github 已经不支持 输入用户密码校验了，所以需要将 编写博客的对应电脑上的 ssh-key 公钥 绑定到 github 上</p><p>一般在 c 盘 用户 下 .ssh 文件夹中</p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 文件夹名</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new name</span><br></pre></td></tr></table></figure><p>文章的位置是在 source 下的 _posts 中，也可直接将 markdown 文件复制进去，一些标准配置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">date: 日期</span><br><span class="line">category: 分类</span><br><span class="line">top<span class="emphasis">_img: 缩略图</span></span><br><span class="line"><span class="emphasis">tags:</span></span><br><span class="line"><span class="emphasis">    - 标签1</span></span><br><span class="line"><span class="emphasis">    - 标签2</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis">&gt; 概述</span></span><br><span class="line"><span class="emphasis">&lt;!-- more --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><p>在themes 中 使用 git 拉下主题代码，再将根目录中的<code>config.yml</code> 文件中的 <code>theme</code> 的内容改成下载的博客主题</p><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo 清理</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># hexo 生成</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="绑定github"><a href="#绑定github" class="headerlink" title="绑定github"></a>绑定github</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>仓库名需要是 <code>用户名.github.io</code></p><p>注意创建分支并切换到 master ，将master 设置为主分支</p><h3 id="安装hexo-git-部署插件"><a href="#安装hexo-git-部署插件" class="headerlink" title="安装hexo git 部署插件"></a>安装hexo git 部署插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h3 id="设置远程仓库"><a href="#设置远程仓库" class="headerlink" title="设置远程仓库"></a>设置远程仓库</h3><p>打开 <code>_config.yml </code> 修改如下几项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">&#x27;git@github.com:MXE23/MXE23.github.io.git&#x27;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h3><p><strong>注意：</strong> 需要绑定过 ssh-key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">推送前先生成一下</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta"># </span><span class="language-bash">推送</span></span><br><span class="line">hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>https:用户名.github.io</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>阿里云，腾讯云等都可以</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>类型选择 CNAME：一个域名映射到另一个域名</p><h3 id="新建-CNAME-文件"><a href="#新建-CNAME-文件" class="headerlink" title="新建 CNAME 文件"></a>新建 CNAME 文件</h3><p>在 hexo 项目根目录新增一个 CNAME 文件</p><p>内容是设置域名解析 的 域名，推送到 github 上</p><h3 id="github-设置"><a href="#github-设置" class="headerlink" title="github 设置"></a>github 设置</h3><p>登录 github 找到对应仓库的 设置 下的</p><p>Pages 其中的 Custom domain</p><p>如果其中的值 是之前的域名就可以通过之前的配置进行访问</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;记录一下 hexo 搭建个人博客 以及 绑定 github 绑定域名的整体流程&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="其他" scheme="http://mxe23.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="博客" scheme="http://mxe23.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
